{"version":3,"sources":["TopMenu/logo.svg","models/ProvContract.js","models/ContractDetails.js","models/Tag.js","models/maps/MapModel.js","models/TagArray.js","models/maps/TagArrayMap.js","models/User.js","models/Link.js","models/ContractBasedId.js","models/Select.js","models/Uri.js","models/ProvRecords.js","models/selectors/SelectSelector.js","models/maps/ContractBaseMap.js","models/maps/TagsMap.js","models/maps/ContractTagsMap.js","models/selectors/TagSelector.js","models/maps/LinkMap.js","models/maps/ContractLinksMap.js","models/EditModelState.js","models/EditModel.js","models/maps/EditModelMap.js","models/maps/ContractEditModelMap.js","models/selectors/EditModelSelector.js","models/selectors/LinkSelector.js","models/maps/ProvContractMap.js","models/selectors/ProvContractSelector.js","models/selectors/SpecialRoleSelector.js","models/maps/UsersMap.js","models/selectors/UserSelector.js","models/selectors/UriSelector.js","models/maps/ProvRecordsMap.js","models/selectors/ProvRecordsSelector.js","modelActions.js","EditViews/actions.js","EditViews/EditModal/EditErrorModal.js","EditViews/EditModal/EditModal.js","EditViews/withDefaultBehavior.js","MetaMaskPromiseFactory.js","EditViews/withFormValidation.js","EditViews/EditModal/BasicModalForm.js","EditViews/EditTagView/EditTagView.js","EditViews/connectWithDefault.js","EditViews/EditTagView/EditTagComponent.js","operators.js","EditViews/detailObsFactory.js","EditViews/EditTagView/reducer.js","EditViews/DeployContract/DeployModal.js","EditViews/DeployContract/reducer.js","withDefaultImage.js","EditViews/EditDetailsView/EditDetailsView.js","EditViews/EditDetailsView/reducer.js","EditViews/reducer.js","TagView/TagView.js","TagView/TagButton.js","TagView/index.js","models/maps/TagOptionsMap.js","EditViews/EditUserView/EditUserView.js","EditViews/EditUserView/EditUserComponent.js","EditViews/EditUserView/EditLinkComponent.js","UsersView/actions.js","EditViews/EditUserView/reducer.js","EditViews/ProvRecordsView/ProvRecordsView.js","DefaultIcons/ErrorIcon.js","DefaultIcons/SuccessIcon.js","TopMenu/FancyButtonItem.js","TopMenu/TopMenu.js","TopMenu/index.js","Web3Loader/actions.js","Web3Loader/Loader.js","ProvenanceView/actions.js","Web3Loader/index.js","Web3Loader/reducer.js","LinksView/LinkNav/index.js","LinksView/LinkNav/LinkNav.js","LinksView/LinksTable/LinkRow/index.js","LinksView/LinksTable/LinkRow/LinkRow.js","LinksView/LinksTable/index.js","LinksView/LinksTable/LinksTable.js","LinksView/index.js","LinksView/LinksView.js","ContractView/ContractDetailsView.js","SelectReducer/index.js","SelectReducer/reducer.js","TagsListView/TagsListView.js","models/maps/UriMap.js","ProvenanceView/ProvenanceTable.js","ProvenanceView/reducer.js","UsersView/SpecialRolesMap.js","UsersView/UsersTable.js","UsersView/reducer.js","ContractView/ContentView.js","ContractView/ContractHeader.js","ContractView/index.js","ContractView/ContractView.js","App.js","registerServiceWorker.js","tagReducer.js","linksReducer.js","rootReducer.js","index.js"],"names":["module","exports","__webpack_require__","p","ProvContract","address","arguments","length","undefined","details","ContractDetails","Object","classCallCheck","this","softClone","roles","specialRoles","o","assign","contract","getAddress","self","getTags","getDetails","title","description","logoUrl","getTitle","getLogoUrl","Tag","id","getId","MapModel","getIdFunc","emptyItemConstructor","_this","items","_len","Array","_key","map","item","defineProperty","has","cb","key","get","res","forEach","push","reset","list","add","getItems","mapToArray","TagArray","tags","tag","includes","TagArrayMap","_getPrototypeOf2","possibleConstructorReturn","getPrototypeOf","call","apply","concat","User","isOwner","specialKey","roleKey","owner","role","hasTag","specials","Link","tagsKey","tagArray","ContractBasedId","equals","Select","selected","index","indexOf","slice","toConsumableArray","getSelectedContract","isRootSelected","Uri","ProvRecords","uri","records","record","getUri","putRecord","SelectSelector","root","getKey","getSelectedList","getSelect","select","getLinkSelectedContract","getTagEditModel","getEditUserSelect","getEditModel","getEditModelContract","ContractBaseMap","createNewList","prototype","TagsMap","ContractTagsMap","TagSelector","getTagsMap","getSelectedLink","getContractSelected","LinkMap","ContractLinkMap","State","props","state","CLEARED","SUCCESS","ERROR","LOADING","EditModel","modal","open","createStateCleared","value","getStateProps","isState","setState","createStateSuccess","createStateError","createStateLoading","setAddress","setModalOpen","isOpenModal","getModal","isOpen","setOpen","isSuccess","isError","isLoading","setCleared","setSuccess","setError","setLoading","EditModelMap","ContractEditModelMap","getSelected","modals","deploy","editTag","editUser","editLink","displayProv","EditModelSelector","getMap","newContractKey","detailsKey","userKey","linkKey","selectedMap","tagKey","LinkSelector","getLinks","getLinkSelectedLinks","getSelectedKey","getLink","ProvContractMap","ProvContractSelector","SpecialRoleSelector","UsersMap","UserSelector","UriSelector","ProvRecordsMap","ProvRecordsSelector","types","contractLoad","contractDetailsLoaded","contractSelect","contractSelectHistory","contractSelectInit","contractSelected","linkSelect","linkSelected","typeLoad","typeLoaded","linksLoad","linkLoaded","userSpecialRoleLoaded","onContractLoad","type","onContractDetailsLoaded","onContractSelect","onContractSelectInit","onContractSelectHistory","onContractSelected","onTypeLoad","contractAddress","tagId","onTypeLoaded","tagName","onLinksLoad","onLinkLoaded","link","onLinkSelect","onLinkSelected","onUserSpecialRoleLoaded","nop","editModalOpen","editError","editSuccess","editSuccessAutoClear","editModalClear","edit","editDetails","addUser","deployContract","deployContractSuccess","deployContractModalOpen","reselect","onEditModalReselect","current","onEditBase","payload","onDeployContract","onEditTag","origTag","onEditLink","origLink","onAddUser","user","origUser","onEditDetails","desc","url","origDetails","onShowProvenance","onNop","onEditModalOpenBase","onEditModalOpen","onDeployContractOpen","onEditDetailsModalOpen","onEditTagModalOpen","onEditUserModalOpen","onEditLinkModalOpen","onProvRecordsOpen","onEditModalClear","onEditSuccessBase","onEditSuccess","onEditSuccessNoClear","onEditDetailsSuccess","onDeployContractSuccess","onEditError","error","onDeployContractError","onEditDetailsError","EditErrorModal","_React$Component","inherits","createClass","react_default","a","createElement","Message","List","Item","react","Modal","basic","size","Content","icon","Icon","name","Header","header","message","Actions","Button","color","inverted","onClick","onClearResult","React","Component","EditModal","deleteButton","submitButton","delete","negative","floated","labelPosition","disabled","deleteValid","onDelete","positive","commitValid","onSubmit","editModel","onClose","closeIcon","Dimmer","active","Loader","content","scrolling","hidden","warning","msg","children","EditErrorModal_EditErrorModal","onClear","modalPropsFrom","submitFunc","valid","withDefaultBehavior","WrappedComponent","_class","_this$props","bind","metaMaskCallback","resolve","reject","err","MetaMaskPromiseFactory","accountsPromise","web3","Promise","eth","getAccounts","networkIdPromise","net","withFormValidation","_this2","formValidation","onValid","onToggleValid","onInvalid","BasicModalForm","EditModal_EditModal","lib","onValidSubmit","EditTagView","EditModal_BasicModalForm","Group","inline","Input","label","labelTitle","placeholder","required","onChange","e","setTitle","connectWithDefault","mapStateToProps","mapDispatchToProps","mergeProps","connect","getSelectedModel","withDefaultMap","dispatch","dispatchProps","actions","onReselect","withDefaultDispatch","stateProps","ownProps","withDefaultMerge","selectedModal","getContractSelectedTag","origTitle","ValidatedEditTagView","withWeb3ContractFrom","state$","source","pipe","withLatestFrom","_ref","_ref2","slicedToArray","action","web3Instance","Contract","SimpleProvenanceContract","truffle","abi","withAccountInfo","flatMap","_ref3","from","accounts","account","withContentFromIDArray","arrayMathod","singleMethod","_ref4","methods","switchAll","result","detailObsFactory","detail","currDetail","web3ObsFac","localeCompare","of","noChange","arrayObsRecFactory","array","nextCheck","epic","combineEpics","action$","ofType","defer","setTagTitle","send","modelActions","catchError","console","log","DeployModal","onTitleChange","success","zip","data","binary","args","_ref5","options","filter","withDefaultImage","imageUrl","checkUrl","ValidatedEditDetailsView","EditDetailsView","getDescription","Grid","stackable","Column","width","verticalAlign","Image","src","centered","circular","widths","validations","onUrlChange","TextArea","style","minHeight","onDescChange","currentDetails","getter","web3Func","forkJoin","setDescription","setLogoUrl","resTitle","resDesc","resUrl","checkRes","resActions","editTagEpic","delay","deployContractEpic","editDetailsEpic","reducer","model","setSelected","colors","getColor","TagView","_ref$tagIcon","tagIcon","labelProps","objectWithoutProperties","Label","_","capitalize","TagButton","_ref$parentClick","parentClick","_ref$childClick","childClick","loading","tagViewProps","as","compact","TagView_TagView","ClosableTagButton","fitted","TagButton_TagButton","TagOptionsMap","addValidationRule","values","EditUserView","handleChange","comp","renderLabel","defaultProps","TagButton_ClosableTagButton","onRemove","appendList","keyName","Dropdown","convertTag","mergeKey","text","filterTags","startsWith","idFromMergedKey","userId","special","links","handleNewChange","taggedMap","handleAddItem","added","mergedKey","split","getIcon","tagged","userOptions","selectedUser","search","selection","allowAdditions","onAddItem","labelTags","multiple","fromTagsMap","getContractSelectedUser","getEditSelectedLink","getEditSelectedLinks","onUserLoaded","removedSpecial","getSpecialRoles","hasSpecialRole","addedSpecial","removedLink","getRoles","hasRole","addedLink","web3ObsFactory","changeUser","userActions","actions$","getSelectedProvRecords","_ref$records","recordsView","getRecords","Container","ErrorIcon","SuccessIcon","FancyButtonItem","_ref$editModel","childIcon","Menu","SuccessIcon_SuccessIcon","ErrorIcon_ErrorIcon","corner","TopMenu","searchSubmit","logo","FancyButtonItem_FancyButtonItem","onDeploy","onEdit","isContractSelected","onAddTag","onAddLink","position","Form","src_TopMenu","selectedContract","getNewContractModel","getContractDetailsModel","getUserAddModel","getLinkAddModel","editModelActions","startInit","Web3Loader","startWeb3Init","failed","params","URLSearchParams","location","match","onProvRecordsShow","loaded","src_Web3Loader","window","Web3","currentProvider","recordActions","titles","getLinkSelectedContractTitles","sections","divider","Breadcrumb","Divider","Section","_ref$link","Table","Row","Cell","LinksView_LinksTable","getLinkSelected","_ref$tags","_ref$links","linkRows","LinksTable_LinkRow","singleLine","selectable","HeaderCell","Body","src_LinksView","LinksView_LinkNav","Description","SelectReducer","setLinkSelected","tagModals","_ref$list","labels","_loop","Segment","dividing","horizontal","UriMap","uris","editModels","onShowProv","encUri","encodeURIComponent","_ref$editModels","TableCell","collapsing","getProvenanceRecords","getProvenanceRecord","reduce","provRecords","provRecordReducer","SpecialRolesMap","users","onEditUser","_ref$specialRoles","_ref$users","rows","specialRolesView","unshift","src_TagView","editIcon","UsersView_reducer","specialRolesReducer","usersReducer","ContentView","provenance","activeItem","handleItemClick","activeComponent","ProvenanceView_ProvenanceTable","UsersView_UsersTable","attached","tabular","keys","Subheader","ContractView","padded","ContractView_ContractHeader","columns","stretched","ContractView_ContractDetailsView","src_TagsListView_TagsListView","ContentView_ContentView","App","selectHistoryContract","renderModal","DeployContract_DeployModal","EditViews_EditDetailsView_EditDetailsView","EditLinkComponent","EditTagComponent","EditUserComponent","ProvRecordsView","src_ContractView","checkAndRender","component","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","tagReducer","linkReducer","ContractLinksMap","contractReducer","rootEpic","getLinkTypes","_ref7","_ref8","_ref9","getLinkList","_ref10","_ref11","linkAddress","_ref6","getLinkType","typeName","_ref12","_ref13","isLoaded","editModelEpics","userEpic","uriEpic","epicMiddleware","createEpicMiddleware","history","createBrowserHistory","store","createStore","_combineReducers","combineReducers","router","connectRouter","EditModelReducer","uriReducer","rootReducer","applyMiddleware","routerMiddleware","run","ReactDOM","render","es","connected_react_router_lib","Switch","Route","path","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.29c8240f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import ContractDetails from \"./ContractDetails\";\n\nexport default class ProvContract {\n    constructor(address=undefined, details = new ContractDetails()) {\n        this.address = address;\n        this.details = details;\n    }\n\n    getAddress() {\n        return this.address;\n    }\n\n    static getAddress(contract) {\n        return contract.getAddress();\n    }\n\n    static getTags(self) {\n        return self.getTags();\n    }\n\n    setDetails(details) {\n        return this.softClone({details: details});\n    }\n\n    getDetails() {\n        return this.details;\n    }\n\n    static getDetails(contract) {\n        if(contract === undefined) {\n            return new ContractDetails();\n        }\n        return contract.getDetails();\n    }\n\n    setSpecialRoles(roles) {\n        return this.softClone({specialRoles: roles});\n    }\n\n    softClone(o) {\n        return Object.assign(new ProvContract(), this, o);\n    }\n}","import ProvContract from \"./ProvContract\";\n\nexport default class ContractDetails {\n    constructor(title = \"\", description = \"\", logoUrl = \"\") {\n        this.title = title;\n        this.description = description;\n        this.logoUrl = logoUrl;\n    }\n\n    getTitle() {\n        return this.title;\n    }\n\n    getDescription() {\n        return this.description;\n    }\n\n    getLogoUrl() {\n        return this.logoUrl;\n    }\n\n    static getTitle(details) {\n        if(details === undefined) {\n            return \"\";\n        }\n        \n        return details.getTitle();\n    }\n\n    static getDescription(details) {\n        return details.description;\n    }\n\n    static getLogoUrl(details) {\n        return details.getLogoUrl();\n    }\n}","export default class Tag {\n    constructor(id, title) {\n        this.id = id;\n        this.title = title;\n    }\n\n    getId() {\n        return this.id;\n    }\n\n    static getId(self) {\n        return self.getId();\n    }\n\n    getTitle() {\n        return this.title;\n    }\n\n    static getTitle(self) {\n        return self.getTitle();\n    }\n}","export default class MapModel {\n    constructor(id, getIdFunc, emptyItemConstructor, ...items) {\n        this.id = id;\n        this.getIdFunc = getIdFunc;\n        this.emptyItemConstructor = emptyItemConstructor;\n        this.items = {};\n        items.map((item) => this.items[this.getIdFunc(item)] = item);\n    }\n\n    reset() {\n        return this.softClone({\n            items: {}\n        });\n    }\n\n    static reset(self) {\n        return self.reset();\n    }\n\n    getId() {\n        return this.id;\n    }\n\n    static getId(self) {\n        return self.getId();\n    }\n\n    add(item) {\n        return this.softClone({\n            items: Object.assign({}, this.items, {\n                [this.getIdFunc(item)]: item\n            })\n        });\n    }\n\n    static add(list, item) {\n        return list.add(item);\n    }\n\n    get(id) {\n        if(this.has(id)) {\n            return this.items[id];\n        }\n        return this.emptyItemConstructor(id);\n    }\n\n    static get(self, id) {\n        return self.get(id);\n    }\n\n    has(id) {\n        let item = this.items[id];\n        if(item) {\n            return true;\n        }\n        return false;\n    }\n\n    static has(self, id) {\n        return self.has(id);\n    }\n\n    getItems() {\n        return this.items;\n    }\n\n    static getItems(self) {\n        return self.getItems();\n    }\n\n    softClone(o) {\n        return Object.assign(new MapModel(), this, o);\n    }\n\n    forEach(cb) {\n        for(let key in this.items) {\n            cb(key, this.get(key));\n        }\n    }\n\n    static forEach(self, cb) {\n        self.forEach(cb);\n    }\n\n    mapToArray(cb) {\n        let res = [];\n        this.forEach((key, item) => res.push(cb(key, item)));\n        return res;\n    }\n\n    static mapToArray(self, cb) {\n        return self.mapToArray(cb);\n    }\n}","export default class TagArray {\n    constructor(title=\"\", tags=[]) {\n        this.title = title;\n        this.tags = tags;\n    }\n\n    static getTitle(self) {\n        return self.title;\n    }\n\n    static getTags(self) {\n        return self.tags;\n    }\n\n    static hasTag(self, tag) {\n        return self.tags.includes(tag);\n    }\n}","import MapModel from \"./MapModel\";\nimport TagArray from \"../TagArray\";\n\nexport default class TagArrayMap extends MapModel {\n    constructor(id, ...items) {\n        super(\n            id,\n            (item) => TagArray.getTitle(item),\n            (id) => new TagArray(id),\n            ...items\n        );\n    }\n}","import TagArrayMap from \"./maps/TagArrayMap\";\nimport TagArray from \"./TagArray\";\n\nexport default class User extends TagArrayMap {\n    static specialKey = \"special\";\n    static roleKey = \"link\";\n\n    constructor(address=\"\", specialRoles=[], roles=[], isOwner=false) {\n        super(\n            address,\n            new TagArray(User.specialKey, specialRoles),\n            new TagArray(User.roleKey, roles)\n        );\n        this.address = address;\n        //this.specialRoles = specialRoles;\n        //this.roles = roles;\n        this.owner = isOwner;\n    }\n\n    static getAddress(self) {\n        return self.address;\n    }\n\n    static hasRole(self, role) {\n        let roles = TagArrayMap.get(self, User.roleKey);\n        return TagArray.hasTag(roles, role);\n    }\n\n    static hasSpecialRole(self, role) {\n        let specials = TagArrayMap.get(self, User.specialKey);\n        return TagArray.hasTag(specials, role);\n    }\n\n    static getSpecialRoles(self) {\n        let specials = TagArrayMap.get(self, User.specialKey);\n        return TagArray.getTags(specials);\n    }\n\n    static getRoles(self) {\n        let roles = TagArrayMap.get(self, User.roleKey);\n        return TagArray.getTags(roles);\n    }\n\n    static isOwner(self) {\n        return self.owner;\n    }\n}","import TagArrayMap from \"./maps/TagArrayMap\";\nimport TagArray from \"./TagArray\";\n\nexport default class Link extends TagArrayMap {\n    static tagsKey = \"tags\";\n\n    constructor(address=\"\", tags=[], title=\"\") {\n        super(\n            address,\n            new TagArray(Link.tagsKey, tags)\n        );\n        this.address = address;\n        this.title = title;\n    }\n\n    getAddress() {\n        return this.address;\n    }\n\n    static getAddress(self) {\n        return self.getAddress();\n    }\n\n    getTitle() {\n        return this.title;\n    }\n\n    getTags() {\n        let tagArray = this.get(Link.tagsKey);\n        return TagArray.getTags(tagArray);\n    }\n}","export default class ContractBasedId {\n    constructor(address = \"\", id = \"\") {\n        this.address = address;\n        this.id = id;\n    }\n\n    getAddress() {\n        return this.address;\n    }\n\n    static getAddress(self) {\n        return self.getAddress();\n    }\n\n    getId() {\n        return this.id;\n    }\n\n    static getId(self) {\n        return self.getId();\n    }\n\n    equals(o) {\n        if(this.address === o.address \n        && this.id === o.id) {\n            return true;\n        }\n        return false;\n    }\n\n    static equlas(self, o) {\n        return self.equals(o);\n    }\n}","import ContractBasedId from \"./ContractBasedId\";\n\nexport default class Select {\n    constructor() {\n        this.selected = [];\n    }\n\n    setLinkSelected(address) {\n        let index = this.selected.indexOf(address);\n        if(index >= 0) {\n            return this.softClone({\n                selected: this.selected.slice(0, (index+1))\n            });\n        }\n        return this.softClone({selected: [...this.selected, address]});\n    }\n\n    setSelected(address) {\n        return this.softClone({selected: [address]});\n    }\n\n    static getSelectedList(self) {\n        return self.selected;\n    }\n\n    getSelectedContract() {\n        return this.selected[0];\n    }\n\n    static getSelectedContract(self) {\n        return self.getSelectedContract();\n    }\n\n    isRootSelected() {\n        return this.selected.length > 0;\n    }\n\n    static isRootSelected(list) {\n        return list.isRootSelected();\n    }\n\n    static getLinkSelectedContract(list) {\n        return list.selected[list.selected.length-1];\n    }\n\n    softClone(o) {\n        return Object.assign(new Select(), this, o);\n    }\n}","import Tag from \"./Tag\";\n\nexport default class Uri extends Tag {\n\n}","export default class ProvRecords {\n    constructor(uri, records=[]) {\n        this.uri = uri;\n        this.records = records;\n    }\n\n    getUri() {\n        return this.uri;\n    }\n\n    static getUri(self) {\n        return self.getUri();\n    }\n\n    getRecords() {\n        return this.records;\n    }\n\n    putRecord(record) {\n        return this.softClone({\n            records: [...this.records, record]\n        });\n    }\n\n    static putRecord(self, record) {\n        return self.putRecord(record);\n    }\n\n    softClone(o) {\n        return Object.assign(new ProvRecords(), this, o);\n    }\n}","import Select from \"../Select\";\n\nexport default class SelectSelector {\n\n    static getKey() {\n        return \"select\";\n    }\n\n    static getSelect(root) {\n        return root[SelectSelector.getKey()];\n    }\n\n    static getSelectedList(root) {\n        return Select.getSelectedList(SelectSelector.getSelect(root));\n    }\n\n    static isContractSelected(root) {\n        return Select.isRootSelected(SelectSelector.getSelect(root));\n    }\n\n    static getSelectedContract(root) {\n        let select = SelectSelector.getSelect(root);\n        return Select.getSelectedContract(select);\n    }\n\n    static getSelectedLink(root) {\n        let select = SelectSelector.getSelect(root);\n        return Select.getLinkSelectedContract(select);\n    }\n\n    static getTagEditModal(root) {\n        let select = SelectSelector.getSelect(root);\n        return Select.getTagEditModel(select);\n    }\n\n    static getUserEditModel(root) {\n        let select = SelectSelector.getSelect(root);\n        return Select.getEditUserSelect(select);\n    }\n\n    static getEditModel(root) {\n        let select = SelectSelector.getSelect(root);\n        return Select.getEditModel(select);\n    }\n\n    static getEditModelContract(root) {\n        let select = SelectSelector.getSelect(root);\n        return Select.getEditModelContract(select);\n    }\n}","import MapModel from \"./MapModel\";\n\nexport default class ContractBaseMap extends MapModel {\n    constructor(id, createNewList, ...items) {\n        super(\n            id, \n            (list) => MapModel.getId(list), \n            (id) => createNewList(id),\n            ...items\n        );\n    }\n\n    add(address, item) {\n        let list = super.get(address);\n        list = MapModel.add(list, item);\n        return super.add(list);\n    }\n\n    static add(self, address, item) {\n        return self.add(address, item);\n    }\n\n    softClone(o) {\n        return Object.assign(new ContractBaseMap(), this, o);\n    }\n}","import MapModel from \"./MapModel\";\nimport Tag from \"../Tag\";\n\nexport default class TagsMap extends MapModel {\n    constructor(id) {\n        super(id, (item) => Tag.getId(item), (id) => new Tag(id));\n    }\n}","import ContractBaseMap from \"./ContractBaseMap\";\nimport TagsMap from \"./TagsMap\";\n\nexport default class ContractTagsMap extends ContractBaseMap {\n    constructor(id, ...items) {\n        super(id, (id) => new TagsMap(id), ...items);\n    }\n}","import SelectSelector from \"./SelectSelector\"\nimport ContractTagsMap from \"../maps/ContractTagsMap\";\nimport TagsMap from \"../maps/TagsMap\";\n\nexport default class TagSelector {\n\n    static key = \"tags\";\n\n    static getTagsMap(root) {\n        return root[TagSelector.key];\n    }\n\n    static getContractSelected(root) {\n        let address = SelectSelector.getSelectedContract(root);\n        let map = TagSelector.getTagsMap(root);\n        return ContractTagsMap.get(map, address);\n    }\n\n    static getLinkSelected(root) {\n        let address = SelectSelector.getSelectedLink(root);\n        let map = TagSelector.getTagsMap(root);\n        return ContractTagsMap.get(map, address);\n    }\n\n    static getContractSelectedTag(root, id) {\n        let list = TagSelector.getContractSelected(root);\n        return TagsMap.get(list, id);\n    }\n}","import MapModel from \"./MapModel\";\nimport Link from \"../Link\";\n\nexport default class LinkMap extends MapModel {\n    constructor(id) {\n        super(\n            id,\n            Link.getAddress,\n            (id) => new Link(id)\n        )\n    }\n}","import ContractBaseMap from \"./ContractBaseMap\";\nimport LinkMap from \"./LinkMap\";\n\nexport default class ContractLinkMap extends ContractBaseMap {\n    constructor(id) {\n        super(id, (id) => new LinkMap(id));\n    }\n}","export default class State {\n    constructor(id, props) {\n        this.id = id;\n        this.props = Object.assign({}, props);\n    }\n\n    static getStateProps(self) {\n        return self.props;\n    }\n\n    static isState(self, state) {\n        return self.id === state;\n    }\n\n    static CLEARED = 0;\n    static SUCCESS = 1;\n    static ERROR = 2;\n    static LOADING = 3;\n\n    static createStateCleared(props) {\n        return new State(State.CLEARED, props);\n    }\n\n    static createStateSuccess(props) {\n        return new State(State.SUCCESS, props);\n    }\n\n    static createStateError(props) {\n        return new State(State.ERROR, props);\n    }\n\n    static createStateLoading(props) {\n        return new State(State.LOADING, props);\n    }\n}","import State from \"./EditModelState\";\n\nexport default class EditModel {\n    constructor(id = \"\", address = \"\") {\n        this.address = address;\n        this.id = id;\n        this.modal = \"\";\n        this.open = false;\n        this.state = State.createStateCleared();\n    }\n\n    setAddress(address) {\n        return this.softClone({address});\n    }\n\n    static setAddress(self, address) {\n        return self.setAddress(address);\n    }\n\n    static getAddress(self) {\n        return self.address;\n    }\n\n    setId(id) {\n        return this.softClone({id: id});\n    }\n\n    getId() {\n        return this.id;\n    }\n\n    static getId(modal) {\n        return modal.getId();\n    }\n\n    setModalOpen(modal, value) {\n        return this.softClone({\n            open:value,\n            modal: modal\n        });\n    }\n\n    static setModalOpen(self, modal, value) {\n        return self.setModalOpen(modal, value);\n    }\n\n    isOpenModal(modal) {\n        return this.open && this.modal === modal;\n    }\n\n    static isOpenModal(self, modal) {\n        return self.isOpenModal(modal);\n    }\n\n    getModal() {\n        return this.modal;\n    }\n\n    static getModal(self) {\n        return self.getModal();\n    }\n\n    isOpen() {\n        return this.open;\n    }\n\n    static isOpen(self) {\n        return self.isOpen();\n    }\n\n    setOpen(value) {\n        return this.softClone({open: value});\n    }\n\n    static setOpen(modal, value) {\n        return modal.setOpen(value);\n    }\n\n    getStateProps() {\n        return State.getStateProps(this.state);\n    }\n\n    static getStateProps(self) {\n        return self.getStateProps();\n    }\n\n    isState(state) {\n        return State.isState(this.state, state);\n    }\n\n    isCleared() {\n        return this.isState(State.CLEARED);\n    }\n\n    isSuccess() {\n        return this.isState(State.SUCCESS);\n    }\n\n    static isSuccess(self) {\n        return self.isSuccess();\n    }\n\n    isError() {\n        return this.isState(State.ERROR);\n    }\n\n    static isError(self) {\n        return self.isError();\n    }\n\n    isLoading() {\n        return this.isState(State.LOADING);\n    }\n\n    static isLoading(self) {\n        return self.isLoading();\n    }\n\n    setCleared(props) {\n        return this.setState(State.createStateCleared(props));\n    }\n\n    static setCleared(self, props) {\n        return self.setCleared(props);\n    }\n\n    setSuccess(props) {\n        return this.setState(State.createStateSuccess(props));\n    }\n\n    static setSuccess(self, props) {\n        return self.setSuccess(props);\n    }\n\n    setError(props) {\n        return this.setState(State.createStateError(props));\n    }\n\n    static setError(self, props) {\n        return self.setError(props);\n    }\n\n    setLoading(props) {\n        return this.setState(State.createStateLoading(props));\n    }\n\n    static setLoading(self, props) {\n        return self.setLoading(props);\n    }\n\n    setState(state) {\n        return this.softClone({state: state});\n    }\n\n    softClone(o) {\n        return Object.assign(new EditModel(), this, o);\n    }\n}","import MapModel from \"../maps/MapModel\";\nimport EditModel from \"../EditModel\";\n\nexport default class EditModelMap extends MapModel {\n    constructor(id) {\n        super(\n            id,\n            EditModel.getId,\n            (id) => new EditModel(id)\n        );\n    }\n}","import ContractBaseMap from \"./ContractBaseMap\";\nimport EditModelMap from \"./EditModelMap\";\nimport ContractBasedId from \"../ContractBasedId\";\n\nexport default class ContractEditModelMap extends ContractBaseMap {\n    static modals = {\n        deploy: \"deployModal\",\n        details: \"detailsModal\",\n        editTag: \"editTagModal\",\n        editUser: \"editUserModal\",\n        editLink: \"editLinkModal\",\n        displayProv: \"displayProv\"\n    }\n\n    constructor(id) {\n        super(id, (id) => new EditModelMap(id));\n        this.selected = new ContractBasedId();\n    }\n\n    setSelected(address, id) {\n        return this.softClone({\n            selected: new ContractBasedId(address, id)\n        });\n    }\n\n    getSelected() {\n        return this.selected;\n    }\n\n    static getSelected(self) {\n        return self.getSelected();\n    }\n\n    softClone(o) {\n        return Object.assign(new ContractEditModelMap(), this, o);\n    }\n}","import ContractEditModelMap from \"../maps/ContractEditModelMap\";\nimport EditModelMap from \"../maps/EditModelMap\";\nimport SelectSelector from \"./SelectSelector\";\nimport ContractBasedId from \"../ContractBasedId\";\nimport EditModel from \"../EditModel\";\n\nexport default class EditModelSelector {\n    static key = \"editModels\";\n    static newContractKey = \"new\";\n    static detailsKey = \"details\";\n    static userKey = \"user\";\n    static tagKey = \"tag\";\n    static linkKey = \"link\";\n\n    static getMap(root) {\n        return root[EditModelSelector.key];\n    }\n\n    static getEditModel(root, address, id) {\n        let self = EditModelSelector.getMap(root);\n        let map = ContractEditModelMap.get(self, address);\n        return EditModelMap.get(map, id);\n    }\n\n    static getContractSelected(root) {\n        let address = SelectSelector.getSelectedContract(root);\n        let map = EditModelSelector.getMap(root);\n        return ContractEditModelMap.get(map, address);\n    }\n\n    static getNewContractModel(root) {\n        return EditModelSelector.getEditModel(root, EditModelSelector.newContractKey, EditModelSelector.newContractKey);\n    }\n\n    static getContractDetailsModel(root) {\n        let address = SelectSelector.getSelectedContract(root);\n        return EditModelSelector.getEditModel(root, address, EditModelSelector.detailsKey);\n    }\n\n    static getUserAddModel(root) {\n        let address = SelectSelector.getSelectedContract(root);\n        return EditModelSelector.getEditModel(root, address, EditModelSelector.userKey);\n    }\n\n    static getLinkAddModel(root) {\n        let address = SelectSelector.getSelectedContract(root);\n        return EditModelSelector.getEditModel(root, address, EditModelSelector.linkKey);\n    }\n\n    /**\n     * \n     * @param {*} root \n     * @returns {ContractBasedId} ContractBasedId: The Id object for the selected model.\n     */\n    static getSelectedKey(root) {\n        let map = EditModelSelector.getMap(root);\n        return ContractEditModelMap.getSelected(map);\n    }\n\n    static getSelectedModel(root) {\n        let map = EditModelSelector.getMap(root);\n        let selected = ContractEditModelMap.getSelected(map);\n        let selectedMap = ContractEditModelMap.get(map, ContractBasedId.getAddress(selected));\n        return EditModelMap.get(selectedMap, ContractBasedId.getId(selected));\n    }\n}","import SelectSelector from \"./SelectSelector\";\nimport ContractLinkMap from \"../maps/ContractLinksMap\";\nimport LinkMap from \"../maps/LinkMap\";\nimport ContractBasedId from \"../ContractBasedId\";\nimport EditModelSelector from \"./EditModelSelector\";\n\n\nexport default class LinkSelector {\n    static key = \"links\";\n\n    static getMap(root) {\n        return root[LinkSelector.key];\n    }\n\n    static getLinks(root, address) {\n        let map = LinkSelector.getMap(root);\n        return ContractLinkMap.get(map, address);\n    }\n\n    static getLinkSelectedLinks(root) {\n        let selected = SelectSelector.getSelectedLink(root);\n        return LinkSelector.getLinks(root, selected);\n    }\n\n    static getLinkSelectedLink(root, id) {\n        let map = LinkSelector.getLinkSelectedLinks(root);\n        return LinkMap.get(map, id);\n    }\n\n    static getLink(root, address, id) {\n        let map = LinkSelector.getLinks(root, address);\n        return LinkMap.get(map, id);\n    }\n\n    static getEditSelectedLink(root) {\n        let selected = EditModelSelector.getSelectedKey(root);\n        return LinkSelector.getLink(\n            root, \n            ContractBasedId.getAddress(selected), \n            ContractBasedId.getId(selected)\n        );\n    }\n\n    static getEditSelectedLinks(state) {\n        let selected = EditModelSelector.getSelectedKey(state);\n        return LinkSelector.getLinks(state, ContractBasedId.getAddress(selected));\n    }\n}","import MapModel from \"./MapModel\";\nimport ProvContract from \"../ProvContract\";\n\nexport default class ProvContractMap extends MapModel {\n    constructor(id) {\n        super(\n            id,\n            ProvContract.getAddress,\n            (id) => new ProvContract(id)\n        );\n    }\n\n    softClone(o) {\n        return Object.assign(new ProvContractMap(), this, o);\n    }\n}","import { SelectSelector, ProvContract, ContractDetails } from \"..\";\nimport ProvContractMap from \"../maps/ProvContractMap\";\nimport Select from \"../Select\";\n\nexport default class ProvContractSelector {\n    static key = \"contracts\";\n\n    static getMap(root) {\n        return root[ProvContractSelector.key];\n    }\n\n    static isLoaded(root, address) {\n        return ProvContractMap.has(ProvContractSelector.getMap(root), address);\n    }\n\n    static getSelected(root) {\n        let address = SelectSelector.getSelectedContract(root);\n        let map = ProvContractSelector.getMap(root);\n        return ProvContractMap.get(map, address);\n    }\n\n    static getLinkSelectedContractTitles(root) {\n        let map = ProvContractSelector.getMap(root);\n        let select = SelectSelector.getSelectedList(root);\n\n        return select.map(selected => {\n            return ContractDetails.getTitle(ProvContract.getDetails(ProvContractMap.get(map, selected)));\n        })\n    }\n}","export default class SpecialRoleSelector {\n    static key = \"specialRoles\"\n\n    static getContractSelected(root) {\n        return root[SpecialRoleSelector.key];\n    }\n}","import MapModel from \"./MapModel\";\nimport User from \"../User\";\n\nexport default class UsersMap extends MapModel {\n    constructor(id) {\n        super(\n            id,\n            User.getAddress,\n            (id) => new User(id)\n        );\n    }\n}","import UsersMap from \"../maps/UsersMap\";\n\nexport default class UserSelector {\n    static key = \"users\";\n\n    static getContractSelected(root) {\n        return root[UserSelector.key];\n    }\n\n    static getContractSelectedUser(root, id) {\n        let list = UserSelector.getContractSelected(root);\n        return UsersMap.get(list, id);\n    }\n}","export default class UriSelector {\n    static key = \"uris\";\n\n    static getContractSelected(root) {\n        return root[UriSelector.key];\n    }\n}","import MapModel from \"./MapModel\";\nimport ProvRecords from \"../ProvRecords\";\n\nexport default class ProvRecordsMap extends MapModel {\n    constructor(id) {\n        super(id, (item) => ProvRecords.getUri(item), (id) => new ProvRecords(id));\n    }\n}","import ProvRecordsMap from \"../maps/ProvRecordsMap\";\nimport EditModelSelector from \"./EditModelSelector\";\nimport ContractBasedId from \"../ContractBasedId\";\n\nexport default class ProvRecordsSelector {\n    static key = \"provRecords\";\n\n    static getMap(root) {\n        return root[ProvRecordsSelector.key];\n    }\n\n    static getSelectedProvRecords(root) {\n        let map = ProvRecordsSelector.getMap(root);\n        let selected = EditModelSelector.getSelectedKey(root);\n        return ProvRecordsMap.get(map, ContractBasedId.getId(selected));\n    }\n}","import {Tag, Link, ContractDetails} from \"./models\";\n\nexport const types = {\n    contractLoad: \"CONTRACT_LOAD\",\n    contractDetailsLoaded: \"CONTRACT_DETAILS_LOADED\",\n    \n    //todo-sv: selections are only necessary for the UI not however for the node part... we should refactor this at a latter moment and move selection handling to a view reducer\n    contractSelect: \"CONTRACT_SELECT\",\n    contractSelectHistory: \"CONTRACT_SELECT_HISTORY\",\n    contractSelectInit: \"CONTRACT_SELECT_INIT\",\n    contractSelected: \"CONTRACT_SELECTED\",\n    linkSelect: \"LINK_SELECT\",\n    linkSelected: \"LINK_SELECTED\",\n  \n    typeLoad: \"TYPE_LOAD\",\n    typeLoaded: \"TYPE_LOADED\",\n    \n    linksLoad: \"LINKS_LOAD\",\n    linkLoaded: \"LINK_LOADED\",\n\n    userSpecialRoleLoaded: \"USER_SPECIAL_ROLE_LOADED\",\n};\n\nexport const onContractLoad = (address) => ({\n    type: types.contractLoad,\n    address: address\n});\n\nexport const onContractDetailsLoaded = (address, title, description, logoUrl) => ({\n    type: types.contractDetailsLoaded,\n    address: address,\n    details: new ContractDetails(title, description, logoUrl)\n});\n\nexport const onContractSelect = (address) => ({\n    type: types.contractSelect,\n    address: address\n});\n\nexport const onContractSelectInit = (address) => ({\n    type: types.contractSelectInit,\n    address: address\n});\n\nexport const onContractSelectHistory = (address) => ({\n    type: types.contractSelectHistory,\n    address: address\n});\n\nexport const onContractSelected = (address) => ({\n    type: types.contractSelected,\n    address: address\n});\n\nexport const onTypeLoad = (contractAddress, tagId) => ({\n    type: types.typeLoad,\n    address: contractAddress,\n    tag: new Tag(tagId, \"\")\n});\n\nexport const onTypeLoaded = (address, tagId, tagName) => ({\n    type: types.typeLoaded,\n    address: address,\n    tag: new Tag(tagId, tagName)\n});\n\nexport const onLinksLoad = (address) => ({\n    type: types.linksLoad,\n    address: address,\n});\n\nexport const onLinkLoaded = (contractAddress, address, tags, title) => ({\n    type: types.linkLoaded,\n    address: contractAddress,\n    link: new Link(address, tags, title),\n});\n\nexport const onLinkSelect = (address) => ({\n    type: types.linkSelect,\n    address: address\n});\n\nexport const onLinkSelected = (address) => ({\n    type: types.linkSelected,\n    address: address\n});\n\nexport const onUserSpecialRoleLoaded = (address, id, title) => ({\n    type: types.userSpecialRoleLoaded,\n    address: address,\n    role: new Tag(id, title)\n})","import EditModelSelector from \"../models/selectors/EditModelSelector\";\nimport { ContractDetails, User, Link } from \"../models\";\nimport ContractEditModelMap from \"../models/maps/ContractEditModelMap\";\n\nexport const types = {\n    nop: \"NO_OPERATION\",\n\n    editModalOpen: \"EDIT_MODAL_OPEN\",\n    editError: \"EDIT_ERROR\",\n    editSuccess: \"EDIT_SUCCESS\",\n    editSuccessAutoClear: \"EDIT_SUCCESS_AUTO_CLEAR\",\n    editModalClear: \"EDIT_MODAL_CLEAR\",\n\n    edit: \"EDIT_MODEL\",\n    editTag: \"EDIT_TAG\",\n    editDetails: \"EDIT_DETAILS\",\n    addUser: \"ADD_USER\",\n    editLink: \"EDIT_LINK\",\n    \n    deployContract: \"DEPLOY_CONTRACT\",\n    deployContractSuccess: \"DEPLOY_CONTRACT_SUCCESS\",\n    deployContractModalOpen: \"DEPLOY_CONTRACT_MODAL_OPEN\",\n\n    reselect: \"EDIT_MODAL_RESELECT\"\n}\n\nexport const onEditModalReselect = (address, id, current, modal) => ({\n    type: types.reselect,\n    address,\n    id,\n    current,\n    modal\n});\n\n// edit\n\nconst onEditBase = (type, address, id, payload) => ({\n    type: type,\n    address: address,\n    id: id,\n    payload: payload\n})\n\nexport const onDeployContract = (payload) => onEditBase(\n    types.edit, \n    EditModelSelector.newContractKey, \n    EditModelSelector.newContractKey, \n    onEditBase(\n        types.deployContract, \n        EditModelSelector.newContractKey,\n        EditModelSelector.newContractKey, \n        payload\n    )\n);\n\nexport const onEditTag = (address, id, tag, origTag) => onEditBase(\n    types.edit,\n    address,\n    id,\n    onEditBase(types.editTag, address, id, {\n        tag,\n        origTag\n    })\n);\n\nexport const onEditLink = (address, id, tags, origLink) => onEditBase(\n    types.edit, \n    address, \n    id, \n    onEditBase(types.editLink, address, id, {\n        link: new Link(id, tags),\n        origLink\n    })\n);\n\nexport const onAddUser = (address, user, specialRoles, roles, origUser) => onEditBase(\n    types.edit, \n    address, \n    //model id is based on originalUser so that we manipulate the correct editModel for example in case of a new user the user parameter is set to the address but we want the \"new\" user default parameter which is set in the origUser\n    User.getAddress(origUser), \n    onEditBase( types.addUser, address, User.getAddress(origUser), {\n        user: new User(user, specialRoles, roles),\n        origUser\n    })\n);\n\nexport const onEditDetails = (address, title, desc, url, origDetails) => onEditBase( \n    types.edit,\n    address,\n    EditModelSelector.detailsKey,\n    onEditBase(types.editDetails, address, EditModelSelector.detailsKey, {\n        details: new ContractDetails(title, desc, url),\n        origDetails\n    })\n);\n\nexport const onShowProvenance = (address, id) => onEditBase(\n    types.edit,\n    address,\n    id,\n    onNop()\n);\n\n// other\n\nexport const onNop = () => ({\n    type: types.nop\n});\n\n// open\n\nconst onEditModalOpenBase = (type, value, address, id, modal) => ({\n    type: type,\n    value: value,\n    address: address,\n    id: id,\n    modal\n});\n\nexport const onEditModalOpen = (value, address, id, modal) => onEditModalOpenBase(types.editModalOpen, value, address, id, modal);\n\nexport const onDeployContractOpen = (value) => onEditModalOpenBase(\n    types.deployContractModalOpen, \n    value, \n    EditModelSelector.newContractKey, \n    EditModelSelector.newContractKey,\n    ContractEditModelMap.modals.deploy\n);\n\nexport const onEditDetailsModalOpen = (value, address) => onEditModalOpen(\n    value, \n    address, \n    EditModelSelector.detailsKey,\n    ContractEditModelMap.modals.details\n); \n\nexport const onEditTagModalOpen = (value, address, id) => onEditModalOpen(\n    value,\n    address,\n    id,\n    ContractEditModelMap.modals.editTag\n);\n\nexport const onEditUserModalOpen = (value, address, id) => onEditModalOpen(\n    value,\n    address,\n    id,\n    ContractEditModelMap.modals.editUser\n);\n\nexport const onEditLinkModalOpen = (value, address, id) => onEditModalOpen(\n    value,\n    address,\n    id,\n    ContractEditModelMap.modals.editLink\n);\n\nexport const onProvRecordsOpen = (value, address, id) => onEditModalOpen(\n    value,\n    address,\n    id,\n    ContractEditModelMap.modals.displayProv\n);\n\n// clear\n\nexport const onEditModalClear = (address, id) => ({\n    type: types.editModalClear,\n    address: address,\n    id: id\n})\n\n// success\n\nexport const onEditSuccessBase = (type, address, id, payload) => ({\n    type: type,\n    address: address,\n    id: id,\n    payload: payload\n})\n\nexport const onEditSuccess = (address, id) => onEditSuccessBase(types.editSuccessAutoClear, address, id);\n\nexport const onEditSuccessNoClear = (address, id, payload) => onEditSuccessBase(types.editSuccess, address, id, payload);\n\nexport const onEditDetailsSuccess = (address) => onEditSuccess(\n    address, \n    EditModelSelector.detailsKey\n);\n\nexport const onDeployContractSuccess = (payload) => onEditSuccessNoClear(EditModelSelector.newContractKey, EditModelSelector.newContractKey, payload);\n\n// error\n\nexport const onEditError = (address, id, error) => ({\n    type: types.editError,\n    address: address,\n    id: id,\n    error: error\n})\n\nexport const onDeployContractError = (error) => onEditError(EditModelSelector.newContractKey, EditModelSelector.newContractKey, error);\n\nexport const onEditDetailsError = (address, error) => onEditError(address, EditModelSelector.detailsKey, error);","import React, {Fragment} from 'react';\nimport { connect } from 'react-redux';\n\nimport { \n    Modal,\n    Button, \n    Icon,  \n    Message, \n    Loader, \n    Dimmer\n} from 'semantic-ui-react';\n\nexport class EditErrorModal extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n\n        let list;\n\n        if(this.props.list) {\n            list = (\n                <Message.List>\n                    <Message.Item>Error was logged to the console for further investigation.</Message.Item>\n                    <Message.Item>Check your MetaMask for more error messages.</Message.Item>\n                    <Message.Item>Contact your administrator for further help.</Message.Item>\n                    <Message.Item>Or simply try again.</Message.Item>\n                </Message.List>\n            );\n        }\n\n        return(\n            <Fragment>\n            <Modal\n                basic\n                size=\"small\"\n                open={this.props.open}\n            >\n                <Modal.Content>\n                    <Message\n                        error\n                        icon\n                    >\n                        <Icon name=\"frown outline\"/>\n                        <Message.Content>\n                            <Message.Header>{this.props.header}</Message.Header>\n                            <p>\n                                {this.props.message}\n                            </p>\n                            {list}\n                        </Message.Content>                    \n                    </Message>\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button \n                        color='red' \n                        inverted\n                        onClick={this.props.onClearResult}\n                    >\n                        <Icon name='close' /> Close\n                    </Button>\n                </Modal.Actions>\n            </Modal>\n            </Fragment>\n        );\n    }\n}","import React, {Fragment} from 'react';\nimport { connect } from 'react-redux';\n\nimport { \n    Modal,\n    Button, \n    Icon,  \n    Image,\n    Message, \n    Grid,\n    Item,\n    Loader, \n    Dimmer\n} from 'semantic-ui-react';\n\nimport {EditErrorModal} from \"./EditErrorModal\";\nimport EditModel from '../../models/EditModel';\nimport * as actions from \"../actions\";\nimport EditModelSelector from '../../models/selectors/EditModelSelector';\nimport { SelectSelector } from '../../models';\n\nexport class EditModal extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        let deleteButton;\n        if(this.props.delete) {\n            deleteButton = (\n                <Button negative floated=\"left\" icon labelPosition=\"left\" disabled={!this.props.deleteValid} onClick={this.props.onDelete}>\n                    <Icon name=\"trash\" />\n                    Delete\n                </Button>\n            );\n        }\n\n        let submitButton;\n        if(this.props.submitButton) {\n            submitButton = (\n                <Button positive icon labelPosition=\"left\" disabled={!this.props.commitValid} onClick={this.props.onSubmit}>\n                    <Icon name=\"upload\" />\n                    Commit\n                </Button>\n            );\n        }\n\n        return(\n        <Fragment>\n            <Modal \n                open={EditModel.isOpen(this.props.editModel)}\n                onClose={this.props.onClose}\n                closeIcon\n                size=\"small\"\n            >\n                <Modal.Header>\n                    {this.props.header}\n                </Modal.Header>\n\n                <Dimmer active={EditModel.isLoading(this.props.editModel)}>\n                    <Loader size=\"big\" content=\"Sending...\"/>\n                </Dimmer>\n                \n                <Modal.Content scrolling={this.props.scrolling}>\n                    <Message \n                        hidden={this.props.warning.hidden}\n                        warning\n                        icon=\"warning sign\"\n                        header={this.props.warning.header}\n                        content={this.props.warning.msg}\n                    />\n                    {this.props.children}\n                </Modal.Content>\n                <Modal.Actions>\n                    {submitButton}\n                    {deleteButton}\n                </Modal.Actions>\n            </Modal>\n\n            <EditErrorModal \n                open={EditModel.isError(this.props.editModel)}\n                header={EditModel.getStateProps(this.props.editModel).header}\n                message={EditModel.getStateProps(this.props.editModel).msg}\n                list={EditModel.getStateProps(this.props.editModel).list}\n                onClearResult={this.props.onClear}\n            />\n        </Fragment>\n        );\n    }\n}\n\nexport const withDefaultMap = (state, props) => {\n    return Object.assign({}, {\n        editModel: EditModelSelector.getSelectedModel(state),\n        address: SelectSelector.getSelectedContract(state),\n    }, props);\n}\n\nexport const withDefaultDispatch = (dispatch, dispatchProps) => {\n    return Object.assign({}, {\n        onClose: (address, id, modal) => dispatch(\n            actions.onEditModalOpen(false, address, id, modal)\n        ),\n        onClear: (address, id) => dispatch(\n            actions.onEditModalClear(address, id)\n        ),\n        onReselect: (address, id, current, modal) => dispatch(\n            actions.onEditModalReselect(address, id, current, modal)\n        )\n    }, dispatchProps);\n}\n\nexport const withDefaultMerge = (stateProps, dispatchProps, ownProps, props) => {\n    let modal = EditModel.getModal(stateProps.editModel);\n    return Object.assign({}, ownProps, stateProps, dispatchProps, {\n        onClose: () => dispatchProps.onClose(\n            stateProps.address, \n            EditModel.getId(stateProps.editModel), \n            modal\n        ),\n        onClear: () => dispatchProps.onClear(\n            stateProps.address, EditModel.getId(stateProps.editModel)\n        ),\n        onReselect: (id) => dispatchProps.onReselect(\n            stateProps.address, \n            id, \n            EditModel.getId(stateProps.editModel), \n            modal\n        ),\n    }, props);\n}\n\nexport const modalPropsFrom = (props, submitFunc, header, warning={\n    hidden: false,\n    header: \"You are about to make on-chain changes to this contract!\",\n    msg: \"This action will use one or more transactions to make changes to your contract.\"\n}) => {\n    return {\n        editModel: props.editModel,\n        commitValid: props.valid,\n        onClose: props.onClose,\n        onClear: props.onClear,\n        onSubmit: submitFunc,\n        header: header,\n        warning: warning,\n    }\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport { dispatch } from 'rxjs/internal/observable/pairs';\n\nexport const withDefaultBehavior = (WrappedComponent) => {\n    return class extends React.Component {\n        constructor(props) {\n            super(props);\n        }\n\n        onClearResult() {\n            this.props.onClose();\n            this.props.onClear();\n        }\n\n        onSubmit(...values) {\n            this.props.onClose();\n            this.props.onSubmit(...values);\n        }\n\n        render() {\n            return (\n                <WrappedComponent {...this.props} \n                onSubmit={this.onSubmit.bind(this)}\n                onClear={this.onClearResult.bind(this)}/>\n            );\n        }\n    }\n};","export const metaMaskCallback = (resolve, reject) => (err, id) => {\n    if(err) {\n        reject(err);\n    }\n    resolve(id);\n};\n\nexport const MetaMaskPromiseFactory = {\n    accountsPromise: (web3) => new Promise((resolve, reject) => {\n        web3.eth.getAccounts(metaMaskCallback(resolve, reject))\n    }),\n    networkIdPromise: (web3) => new Promise((resolve, reject) => {\n        web3.eth.net.getId(metaMaskCallback(resolve, reject))\n    })\n};\n\nexport default MetaMaskPromiseFactory;","import React from 'react';\n\nexport const withFormValidation = (WrappedComponent) => {\n    return class extends React.Component {\n        constructor(props) {\n            super(props);\n            this.state = {\n                valid: false\n            }\n        }\n\n        onToggleValid(value) {\n            this.setState({valid: value});\n        }\n\n        render() {\n            return (\n                <WrappedComponent \n                    {...this.props}\n                    valid={this.state.valid}\n                    formValidation={{\n                        onValid: () => this.onToggleValid(true), \n                        onInvalid: () => this.onToggleValid(false)\n                    }}\n                />\n            );\n        }\n    }\n};","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport {Form} from \"formsy-semantic-ui-react\";\nimport { withDefaultBehavior } from '../withDefaultBehavior';\nimport { EditModal, modalPropsFrom } from './EditModal';\nimport { withFormValidation } from '../withFormValidation';\n\nexport class BasicModalForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return(\n            <EditModal \n                {...modalPropsFrom(\n                    this.props,\n                    this.props.onSubmit,\n                    this.props.header,\n                    this.props.warning\n                )}\n                submitButton={true}\n            >\n                <Form\n                    onValidSubmit={this.props.onSubmit}\n                    {...this.props.formValidation}\n                >                            \n                    {this.props.children}\n                </Form>\n            </EditModal>\n        );\n    }\n}\n\nexport default withFormValidation(withDefaultBehavior(BasicModalForm));","import React from 'react';\n\nimport {Form} from \"formsy-semantic-ui-react\";\nimport BasicModalForm from \"../EditModal/BasicModalForm\";\n\nexport default class EditTagView extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: this.props.title\n        }\n    }\n\n    setTitle(value) {\n        this.setState({title: value});\n    }\n\n    onSubmit() {\n        this.props.onSubmit(this.state.title);\n    }\n\n    render() {\n        return(\n            <BasicModalForm {...this.props} onSubmit={this.onSubmit.bind(this)}>\n                    <Form.Group inline>\n                        <Form.Input\n                            label={this.props.labelTitle}\n                            name=\"title\"\n                            placeholder={this.props.labelTitle}\n                            required\n                            value={this.state.title}\n                            onChange={(e, value) => this.setTitle(value.value)}\n                        />\n                    </Form.Group>\n                    {this.props.children}\n            </BasicModalForm>\n        );\n    }\n}","import { connect } from 'react-redux';\nimport { withDefaultMap, withDefaultDispatch, withDefaultMerge } from './EditModal/EditModal';\n\nexport const connectWithDefault = (\n    mapStateToProps = () => {}, \n    mapDispatchToProps = () => {}, \n    mergeProps = () => {}\n) => {\n    return connect(\n        (state) => withDefaultMap(\n            state, \n            mapStateToProps(state)\n        ),\n        (dispatch) => withDefaultDispatch(\n            dispatch, \n            mapDispatchToProps(dispatch)\n        ),\n        (stateProps, dispatchProps, ownProps) => withDefaultMerge(\n            stateProps, \n            dispatchProps, \n            ownProps, \n            mergeProps(stateProps, dispatchProps, ownProps)\n        )\n    );\n}","import { connect } from 'react-redux';\n\nimport { SelectSelector, TagSelector} from \"./imports\";\nimport * as actions from \"../actions\";\nimport ValidatedEditTagView from \"./EditTagView\";\nimport EditModelSelector from '../../models/selectors/EditModelSelector';\nimport EditModel from '../../models/EditModel';\nimport { withDefaultDispatch, withDefaultMerge, withDefaultMap } from '../EditModal/EditModal';\nimport { connectWithDefault } from '../connectWithDefault';\n\nexport const mapStateToProps = (state) => {\n    let selectedModal = EditModelSelector.getSelectedModel(state); \n    //let selectedModal = EditModalTagList.getSelected(state.editTag);\n    //todo-sv: We could even say that the EditModalSelector ist responsible for selecting the tag since he has the complete view.\n    let selectedTag = TagSelector.getContractSelectedTag(state, EditModel.getId(selectedModal));\n    \n    return {\n        title: selectedTag.getTitle(),\n        header: \"Add Tag\",\n        labelTitle: \"Tag Title\"\n    };\n}\n\nexport const mapDispatchToProps = (dispatch) => {\n    return {\n        onSubmit: (address, tagId, title, origTitle) => dispatch(actions.onEditTag(address, tagId, title, origTitle)),\n    };\n}\n\nexport const mergeProps = (stateProps, dispatchProps, ownProps) => {\n    return {\n        onSubmit: (title) => dispatchProps.onSubmit(stateProps.address, EditModel.getId(stateProps.editModel), title, stateProps.title),\n    };\n}\n\nexport default connectWithDefault(mapStateToProps, mapDispatchToProps, mergeProps)(ValidatedEditTagView);","import { withLatestFrom, map, flatMap, switchAll } from \"rxjs/operators\";\nimport { from, of, defer } from \"rxjs\";\nimport SimpleProvenanceContract from \"ProvNet/build/linked/SimpleProvenanceContract\";\nimport { MetaMaskPromiseFactory } from \"./MetaMaskPromiseFactory\";\n\nexport const withWeb3ContractFrom = (state$) => {\n    return function withWeb3ContractFromImplementation(source) {\n        return source.pipe(\n            withLatestFrom(state$),\n            map(([action, state]) => ({\n                action, \n                web3Instance:  new state.web3.eth.Contract(SimpleProvenanceContract.truffle.abi, action.address), \n                web3: (state.web3)\n            }))\n        );\n    }\n}\n\nexport const withAccountInfo = () => {\n    return function withAccountInfoImplementation(source) {\n        return source.pipe(\n            flatMap(({action, web3Instance, web3}) => {\n                return from(\n                    MetaMaskPromiseFactory.accountsPromise(web3)\n                ).pipe(\n                    map((accounts) => ({\n                        web3Instance,\n                        account: accounts[0],\n                        action,\n                    }))\n                )\n            }),\n        )\n    }\n}\n\nexport const withContentFromIDArray = (arrayMathod, singleMethod) => {\n    return function withContentFromIDArrayImplementation(source) {\n        return source.pipe(\n            flatMap(({action, web3Instance}) => {\n                return from(\n                    web3Instance.methods[arrayMathod]().call()\n                ).pipe(\n                    switchAll(),\n                    flatMap(id => {\n                        return from(\n                            web3Instance.methods[singleMethod](id).call()\n                        )\n                    }),\n                    map(result => ({action, result}))\n                )\n            })\n        );\n    }\n}","import { of } from \"rxjs\";\n\nexport const detailObsFactory = (detail, currDetail, web3ObsFac) => {\n    if(detail.localeCompare(currDetail) == 0) {\n        return of({noChange: true});\n    }\n\n    return web3ObsFac();\n};\n\nexport const arrayObsRecFactory = (array, nextCheck, web3ObsFac) => {\n    if(array.length == 0) {\n        return nextCheck();\n    }\n\n    return web3ObsFac();\n}","import {MetaMaskPromiseFactory } from \"./imports\";\nimport * as actions from \"../actions\";\nimport { ofType, combineEpics } from \"redux-observable\";\n\nimport { from, of, defer } from \"rxjs\";\nimport { flatMap, map, catchError } from \"rxjs/operators\";\nimport { modelActions } from \"../imports\";\nimport { withWeb3ContractFrom, withAccountInfo } from \"../../operators\";\nimport { detailObsFactory } from \"../detailObsFactory\";\n\nexport const editTagEpic = (action$, state$) => action$.pipe(\n    ofType(actions.types.editTag),\n    withWeb3ContractFrom(state$),\n    withAccountInfo(),\n    flatMap(({web3Instance, account, action}) => {\n        // const detailObsFactory = (detail, currDetail, web3ObsFac) => {\n        //     if(detail.localeCompare(currDetail) == 0) {\n        //         return of({noChange: true});\n        //     }\n\n        //     return web3ObsFac(detail);\n        // }\n\n        let tagId = action.id;\n        let title = action.payload.tag;\n\n        return defer(() => detailObsFactory(\n            title,\n            action.payload.origTag,\n            () => web3Instance.methods.setTagTitle(tagId, title).send({from: account})\n        )).pipe(\n            flatMap(res => {\n                if(res.noChange) {\n                    return of(actions.onEditModalClear(action.address, action.id));\n                }\n\n                return of( \n                    modelActions.onTypeLoaded(action.address, tagId, title),\n                    actions.onEditSuccess(action.address, tagId)\n                );\n            }),\n            catchError(err => {\n                console.log(err);\n                return of(actions.onEditError(action.address, tagId, {\n                    msg: \"Could not commit all transactions.\",\n                    header: \"Tag edit error\",\n                    list: true\n                }));\n            })\n        )\n    })\n);\n\n// export const editTagSuccessEpic = (action$) => action$.pipe(\n//     ofType(actions.types.editSuccess),\n//     delay(1000),\n//     map(action => actions.onEditModalClear(action.address, action.id))\n// );\n\nexport const epic = combineEpics(editTagEpic);","import React, {Fragment} from 'react';\nimport { connect } from 'react-redux';\n\nimport { \n    Modal,\n    Button, \n    Icon,  \n    Message, \n} from 'semantic-ui-react';\nimport {Form} from \"formsy-semantic-ui-react\";\nimport {withFormValidation, withDefaultBehavior} from \"./imports\";\nimport * as actions from \"../actions\";\nimport EditModel from '../../models/EditModel';\nimport { withDefaultDispatch, withDefaultMerge, modalPropsFrom, withDefaultMap } from '../EditModal/EditModal';\nimport BasicModalForm from \"../EditModal/BasicModalForm\";\nimport EditModelSelector from '../../models/selectors/EditModelSelector';\nimport { connectWithDefault } from '../connectWithDefault';\n\nexport class DeployModal extends React.Component {\n\n    constructor(props) {\n        super(props);\n        console.log(props);\n        this.state = {\n            title: \"\",\n        };\n    }\n\n    onTitleChange = (title) => this.setState({title: title});\n\n    onSubmit() {\n        this.props.onSubmit(this.state.title);\n    }\n\n    render() {\n        return(\n            <Fragment>\n            <BasicModalForm \n                {...modalPropsFrom(\n                    this.props,\n                    this.onSubmit.bind(this),\n                    \"Deploy new Provenance Contract\",\n                    {\n                        header: 'You are about to deploy a new contract!',\n                        msg: \"This action will deploy a new SimpleProvenanceContract to the chain your MetaMask is connected to!\" \n                    }\n                )}\n            >\n                <Form.Group inline>\n                    <Form.Input \n                        label=\"Contract Title\"\n                        name=\"title\" \n                        onChange={(e, value) => \n                            this.onTitleChange(value.value)\n                        }\n                        placeholder=\"MyCompaniesContract\"\n                        required\n                        value={this.state.title}\n                    />\n                    \n                </Form.Group>\n            </BasicModalForm>\n            <Modal\n                basic\n                size=\"small\"\n                open={EditModel.isSuccess(this.props.editModel)}\n            >\n                <Modal.Content>\n                    <Message\n                        success\n                        icon\n                    >\n                        <Icon name=\"check\"/>\n                        <Message.Content>\n                            <Message.Header>Success!</Message.Header>\n                            <p>\n                                We successfully deployed your new contract under the following address: <b>{EditModel.getStateProps(this.props.editModel).address}</b>\n                            </p>\n                        </Message.Content>\n                    </Message>\n                    <Message\n                        warning\n                        icon=\"warning sign\"\n                        header=\"Save your contract address!\"\n                        content=\"We are currently not able to save the contract address for you. Copy it and save it somewhere!\"\n                    />\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button \n                        color='yellow' \n                        inverted \n                        onClick={this.props.onClear}\n                    >\n                        <Icon name='warning sign' /> Ok\n                    </Button>\n                </Modal.Actions>\n            </Modal>\n            </Fragment>\n        );\n    }\n}\n\nexport const mapStateToProps = (state) => {\n    return {\n        address: EditModelSelector.newContractKey\n    }\n} \n\nexport const mapDispatchToProps = (dispatch) => {\n    return {\n        onSubmit: (title) => dispatch(actions.onDeployContract(title)),\n    };\n}\n\nexport default connectWithDefault(mapStateToProps, mapDispatchToProps)(DeployModal);","import {MetaMaskPromiseFactory} from \"./imports\";\nimport { combineEpics, ofType } from 'redux-observable';\nimport { \n    withLatestFrom, \n    map,  \n    flatMap, \n    filter,\n    reduce,\n    catchError, \n    mapTo} from \"rxjs/operators\";\nimport { of, from, zip, forkJoin} from 'rxjs';\nimport SimpleProvenanceContract from \"ProvNet/build/linked/SimpleProvenanceContract\";\nimport * as actions from \"../actions\";\n\nexport const deployContractModalOpenEpic = (action$, state$) => action$.pipe(\n    ofType(actions.types.deployContractModalOpen),\n    filter(action => action.value === true),\n    withLatestFrom(state$),\n    flatMap(([action, state]) => {\n        return from(\n            MetaMaskPromiseFactory.networkIdPromise(state.web3)\n        )\n    }),\n    filter((id) => SimpleProvenanceContract.binary[id] === undefined),\n    map((id) => actions.onDeployContractError({\n        msg: \"No pre-build binaries found for chosen network. If you are deploying on a private network please pre-build the contracts for this network.\",\n        header: \"Network unknown!\",\n        list: false\n    }))\n);\n\nexport const deployContractEpic = (action$, state$) => action$.pipe(\n    ofType(actions.types.deployContract),\n    withLatestFrom(state$),\n    flatMap(([action, state]) => {\n        return zip(\n            MetaMaskPromiseFactory.networkIdPromise(state.web3), \n            MetaMaskPromiseFactory.accountsPromise(state.web3), \n            (id, accounts) => ({\n                account: accounts[0],\n                web3Instance: new state.web3.eth.Contract(\n                    SimpleProvenanceContract.truffle.abi, \n                    undefined, \n                    //todo-sv: add some check if binary exists for this network\n                    {data: SimpleProvenanceContract.binary[id]}\n                ),\n                args: [action.payload]\n            })\n        );\n    }),\n    flatMap(({account, web3Instance, args}) => {\n        return from(\n            web3Instance.deploy({arguments: args}).send({from: account})\n        ).pipe(\n            map(res => actions.onDeployContractSuccess({\n                address: res.options.address\n            })),\n            catchError(err => {\n                console.log(err);\n                return of(actions.onDeployContractError({\n                    msg: \"We were not able to deploy your contract.\",\n                    header: \"Contract deployment failed!\",\n                    list: true\n                }));\n            })\n        )\n    }),  \n);\n\nexport const epic = combineEpics(deployContractEpic, deployContractModalOpenEpic);","import React from 'react';\n\nexport const withDefaultImage = (WrappedComponent) => {\n    return class extends React.Component {\n\n        checkUrl(url) {\n            if(url === undefined || url === \"\") {\n                return '/square-image.png';\n            }\n\n            return url;\n        }\n\n        render() {\n            return(<WrappedComponent {...this.props} imageUrl={this.checkUrl(this.props.imageUrl)}/>);\n        }\n    }\n}","import React, {Fragment} from 'react';\nimport { connect } from 'react-redux';\n\nimport {  \n    Image, \n    Grid\n} from 'semantic-ui-react';\nimport {Form} from \"formsy-semantic-ui-react\";\nimport * as actions from \"../actions\";\nimport { \n    ContractDetails, \n    ProvContract, \n    withDefaultImage, \n    EditModalWrapper, \n    withFormValidation \n} from \"./imports\";\nimport { withDefaultBehavior } from '../withDefaultBehavior';\nimport {ProvContractSelector, SelectSelector} from '../../models';\nimport EditModelSelector from '../../models/selectors/EditModelSelector';\nimport { withDefaultDispatch, withDefaultMerge, modalPropsFrom, withDefaultMap } from '../EditModal/EditModal';\nimport { connectWithDefault } from '../connectWithDefault';\n\n\nexport class EditDetailsView extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: ContractDetails.getTitle(this.props.details),\n            desc: ContractDetails.getDescription(this.props.details),\n            imageUrl: ContractDetails.getLogoUrl(this.props.details),\n        }\n    }\n\n    onTitleChange(value) {\n        this.setState({title: value});\n    }\n\n    onUrlChange(value) {\n        this.setState({imageUrl: value});\n    }\n\n    onDescChange(value) {\n        this.setState({desc: value});\n    }\n\n    onSubmit() {\n        this.props.onSubmit(this.state.title, this.state.desc, this.state.imageUrl);\n    }\n\n    render() {\n        return(\n            <EditModalWrapper \n                {...modalPropsFrom(\n                    this.props, \n                    this.onSubmit.bind(this),\n                    \"Edit Contract Details\"\n                )}\n                submitButton={true}\n            >\n                <Grid stackable>\n                    <Grid.Column width=\"4\" verticalAlign=\"middle\">\n                        <Image src={this.state.imageUrl} centered circular size='small'/>\n                    </Grid.Column>\n                    <Grid.Column width=\"12\">\n                        <Form\n                            onValidSubmit={this.onSubmit.bind(this)}\n                            {...this.props.formValidation}\n                        >                            \n                            <Form.Group widths=\"equal\">\n                                <Form.Input\n                                    label=\"Contract Title\"\n                                    name=\"title\"\n                                    placeholder=\"MyCompaniesTitle\"\n                                    required\n                                    value={this.state.title}\n                                    onChange={(e, value) => \n                                        this.onTitleChange(value.value)\n                                    }\n                                />\n                            \n                                <Form.Input\n                                    label=\"Contract Logo URL\"\n                                    name=\"link\"\n                                    placeholder=\"MyCompaniesImageURL\"\n                                    value={this.state.imageUrl}\n                                    validations=\"isUrl\"\n                                    onChange={(e, value) => \n                                        this.onUrlChange(value.value)\n                                    }\n                                />\n                            </Form.Group>\n                            \n                            <Form.TextArea \n                                label=\"Contract Description\"\n                                name=\"desc\"\n                                placeholder=\"Write here a short description of your contract.\"\n                                value={this.state.desc}\n                                style={{ minHeight: 90 }}\n                                onChange={(e, value) => \n                                    this.onDescChange(value.value)\n                                }\n                            />\n                        </Form>\n                    </Grid.Column> \n                </Grid>\n            </EditModalWrapper>\n        );\n    }\n}\n\nexport const ValidatedEditDetailsView = withFormValidation(withDefaultBehavior(withDefaultImage(EditDetailsView)));\n\nexport const mapStateToProps = (state, ownProps) => {\n    let contract = ProvContractSelector.getSelected(state);\n    let details = ProvContract.getDetails(contract);\n    return {\n        details: details\n    };\n}\n\nexport const mapDispatchToProps = (dispatch) => {\n    return {\n        onSubmit: (address, title, desc, url, origDetails) => dispatch(actions.onEditDetails(address, title, desc, url, origDetails)),\n    };\n}\n\nexport const mergeProps = (stateProps, dispatchProps, ownProps) => {\n    return {\n        onSubmit: (title, desc, url) => dispatchProps.onSubmit(stateProps.address, title, desc, url, stateProps.details),\n    };\n}\n\nexport default connectWithDefault(mapStateToProps, mapDispatchToProps, mergeProps)(ValidatedEditDetailsView);","import * as actions from \"../actions\";\nimport { withLatestFrom, flatMap, map, catchError, mapTo, delay } from \"rxjs/operators\";\nimport { ofType, combineEpics } from \"redux-observable\";\nimport { from, of, forkJoin, Observable, iif, defer, empty } from \"rxjs\";\nimport { ContractDetails, modelActions, MetaMaskPromiseFactory } from \"./imports\";\nimport { withWeb3ContractFrom } from \"../../operators\";\nimport EditModelSelector from \"../../models/selectors/EditModelSelector\";\n\nexport const editDetailEpic = (action$, state$) => action$.pipe(\n    ofType(actions.types.editDetails),\n    withWeb3ContractFrom(state$),\n    flatMap(({action, web3Instance, web3}) => {\n        return from(\n            MetaMaskPromiseFactory.accountsPromise(web3)\n        ).pipe(\n            map((accounts) => ({\n                web3Instance,\n                account: accounts[0],\n                action,\n                currentDetails: action.payload.origDetails\n            }))\n        )\n    }),\n    flatMap(({web3Instance, account, action, currentDetails}) => {\n\n        const detailObsFactory = (getter, web3Func) => {\n            let detail = getter(action.payload.details);\n            let currDetail = getter(currentDetails);\n\n            if(detail.localeCompare(currDetail) == 0) {\n                return of({noChange: true});\n            }\n\n            return from(\n                web3Func(detail).send({from: account})\n            ).pipe(\n                catchError(err => {\n                    console.log(err);\n                    return of({error: true});\n                })\n            );\n        }\n        \n        return forkJoin (\n            defer(() => detailObsFactory(\n                ContractDetails.getTitle,\n                web3Instance.methods.setTitle\n            )),\n            defer(() => detailObsFactory(\n                ContractDetails.getDescription,\n                web3Instance.methods.setDescription\n            )),\n            defer(() => detailObsFactory(\n                ContractDetails.getLogoUrl,\n                web3Instance.methods.setLogoUrl\n            ))\n        ).pipe(\n            flatMap(([resTitle, resDesc, resUrl]) => {\n                if(resTitle.noChange && resDesc.noChange && resUrl.noChange) {\n                    return of(actions.onEditModalClear(action.address, EditModelSelector.detailsKey));\n                }\n\n                const checkRes = (res, details, currentDetails, getter) => {\n                    if(res.error) {\n                        return getter(currentDetails);\n                    }\n                    return getter(details);\n                };\n\n                let resActions = [];\n                resActions.push(modelActions.onContractDetailsLoaded(\n                        action.address, \n                        checkRes(resTitle, action.payload.details, currentDetails, ContractDetails.getTitle),\n                        checkRes(resDesc, action.payload.details, currentDetails, ContractDetails.getDescription),\n                        checkRes(resUrl, action.payload.details, currentDetails, ContractDetails.getLogoUrl)\n                    )\n                );\n\n                if(resTitle.error || resDesc.error || resUrl.error) {\n                    resActions.push(actions.onEditDetailsError(action.address, {\n                        msg: \"We were not able to transfer some or all of your details.\",\n                        header: \"One or more transactions failed!\",\n                        list: true\n                    }));\n                } else {\n                    resActions.push(actions.onEditDetailsSuccess(action.address));\n                }\n\n                return from(resActions);\n            })\n        )\n    })\n);\n\nexport const epic = combineEpics(editDetailEpic);","import { ofType, combineEpics } from \"redux-observable\";\nimport { map, delay } from \"rxjs/operators\";\n\nimport ContractEditModelMap from \"../models/maps/ContractEditModelMap\";\nimport * as actions from \"./actions\";\nimport EditModelMap from \"../models/maps/EditModelMap\";\nimport EditModel from \"../models/EditModel\";\nimport { epic as editTagEpic } from \"./EditTagView\";\nimport { epic as deployContractEpic } from \"./DeployContract\";\nimport { epic as editDetailsEpic } from \"./EditDetailsView\";\n\nexport const editSuccessEpic = (action$) => action$.pipe(\n    ofType(actions.types.editSuccessAutoClear),\n    delay(1000),\n    map(action => actions.onEditModalClear(action.address, action.id))\n);\n\nexport const mapEditToRealEditEpic = (action$) => action$.pipe(\n    ofType(actions.types.edit),\n    map(action => action.payload)\n);\n\nexport const epic = combineEpics(\n    editTagEpic, \n    editSuccessEpic, \n    deployContractEpic, \n    editDetailsEpic,\n    mapEditToRealEditEpic\n);\n\nexport const reducer = (\n    state = new ContractEditModelMap(\"editModels\"),\n    action\n) => {\n    let map = ContractEditModelMap.get(state, action.address);\n    let model = EditModelMap.get(map, action.id);\n\n    switch(action.type) {\n        case actions.types.edit:\n            model = EditModel.setLoading(model);\n            break;\n        case actions.types.editError:\n            model = EditModel.setError(model, action.error);\n            break;\n        case actions.types.editSuccess:\n        case actions.types.editSuccessAutoClear:\n            model = EditModel.setSuccess(model, action.payload);\n            break;\n        case actions.types.deployContractModalOpen:\n        case actions.types.editModalOpen:\n            model = EditModel.setModalOpen(model, action.modal, action.value);\n            state = state.setSelected(action.address, action.id);\n            break;\n        case actions.types.editModalClear:\n            model = EditModel.setCleared(model);\n            break;\n        default:\n            return state;\n    }\n\n    return ContractEditModelMap.add(state, action.address, model);\n};","import React from 'react';\nimport _ from 'lodash';\nimport { Label, Icon } from 'semantic-ui-react';\n\nconst colors = [\n    'green',\n    'olive',\n    'yellow',\n    'orange',\n    'teal',\n    'blue',\n    'violet',\n    'purple',\n    'pink',\n    'brown',\n    'grey',\n    'black',\n];\n\nexport const getColor = (tag) => colors[(tag.getId()-1)%colors.length];\n\nexport const getTitle = (tag) => _.capitalize(tag.getTitle());\n\nexport const TagView = ({tag, tagIcon=\"tag\", ...labelProps}) => {\n    const getColor = () => colors[(tag.getId()-1)%colors.length];\n\n    return(\n        <Label  {...labelProps}>\n            <Icon name={tagIcon} color={getColor(tag)}/>\n            {getTitle(tag)}\n        </Label>\n    );\n}","import React from 'react';\nimport {TagView, getColor} from './TagView';\nimport { Table, Label, TableCell, Segment, Button, Icon, Container } from 'semantic-ui-react';\n\nexport const TagButton = ({tag, icon, parentClick = ()=>{}, childClick = ()=>{}, loading, ...tagViewProps}) => {\n    \n    return(\n        <Button as='div' labelPosition='left' compact size=\"tiny\" onClick={() => parentClick(tag.getId())} >\n            <TagView tag={tag} basic size=\"tiny\" {...tagViewProps}/>\n            <Button color={getColor(tag)} loading={loading} compact size=\"tiny\" icon onClick={(e) => childClick(tag.getId(), e)}>\n                {icon}\n            </Button>\n        </Button>\n    );\n}\n\nexport const ClosableTagButton = (props) => {\n    let icon = (<Icon name='close' fitted/>);\n    return (\n        <TagButton icon={icon} {...props} />\n    );\n}","import {TagView, getColor} from \"./TagView\";\n\nexport {getColor};\nexport default TagView;","import TagsMap from \"./TagsMap\";\n\nexport default class TagOptionsMap extends TagsMap {\n    constructor(id, title, icon) {\n        super(id);\n        this.title = title;\n        this.icon = icon;\n    }\n\n    softClone(o) {\n        return Object.assign(new TagOptionsMap(), this, o);\n    }\n\n    static getTitle(self) {\n        return self.title;\n    }\n\n    static getIcon(self) {\n        return self.icon;\n    }\n\n    static fromTagsMap(id, title, icon, map) {\n        return Object.assign(\n            new TagOptionsMap(id, title, icon), \n            map, \n            {id: id}\n        );\n    }\n}","import React from 'react';\nimport EditTagView from '../EditTagView/EditTagView';\nimport {Form} from \"formsy-semantic-ui-react\";\nimport { Dropdown } from 'semantic-ui-react';\nimport { TagsMap, Tag, User, MapModel, ContractTagsMap } from '../../models';\nimport { ClosableTagButton } from '../../TagView/TagButton';\nimport * as TagView from '../../TagView';\nimport UsersMap from '../../models/maps/UsersMap';\nimport { addValidationRule } from 'formsy-react';\nimport BasicModalForm from '../EditModal/BasicModalForm';\nimport EditModelSelector from '../../models/selectors/EditModelSelector';\nimport TagArrayMap from '../../models/maps/TagArrayMap';\nimport TagArray from '../../models/TagArray';\nimport TagOptionsMap from '../../models/maps/TagOptionsMap';\n\naddValidationRule(\"doesNotExist\", (values, value, array) => {\n    return array.indexOf(values[\"title\"]) < 0;\n})\n\nexport class EditUserView extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            values: [],\n            special: \"special\",\n            link: \"link\",\n            added: undefined,\n        }\n    }\n\n    handleChange = (e, comp) => this.setState({values: comp.value});\n\n    renderLabel = (label, index, defaultProps) => {\n        let tags = ContractTagsMap.get(this.props.options, label.map);\n        return (\n            <ClosableTagButton \n                tag={TagsMap.get(tags, label.id)} \n                tagIcon={label.icon.name}\n                childClick={(id, e) => defaultProps.onRemove(e, defaultProps)} \n            />\n        )\n    };\n\n    mergeKey(keyName, key) {\n        return keyName + \"-\" + key;\n    }\n\n    idFromMergedKey(mergedKey) {\n        return mergedKey.split(\"-\")[1];\n    }\n\n    appendList = (tags, keyName, icon, title, options) => {\n        options.push(<Dropdown.Header key={keyName} icon={icon} content={title}/>)\n        TagsMap.forEach(tags, (key, tag) => {\n            options.push(this.convertTag(key, keyName, icon, tag));\n        });\n    }\n\n    convertTag = (key, keyName, icon, tag) => {\n        return ({\n            key: this.mergeKey(keyName, key),\n            value: this.mergeKey(keyName, key),\n            map: keyName,\n            id: key,\n            text: Tag.getTitle(tag),\n            icon: { color: TagView.getColor(tag), name: icon }\n        });\n    }\n\n    filterTags = (key) => this.state.values\n        .filter((value) => value.startsWith(key))\n        .map((value) => this.idFromMergedKey(value));\n\n    onSubmit = (userId) => {\n        let specials = this.filterTags(this.state.special);\n        let links = this.filterTags(this.state.link);\n        this.props.onSubmit(userId, links, specials);\n    };\n\n    handleNewChange = (e, comp) => {\n        if(MapModel.has(this.props.taggedMap, comp.value)) {\n            this.props.onReselect(comp.value);\n        }\n    };\n\n    handleAddItem = (e, comp) => this.setState({added: comp.value});\n\n    render() {\n        let options = [];\n        ContractTagsMap.forEach(this.props.options, (key, tags) => {\n            this.appendList(tags, key, TagOptionsMap.getIcon(tags), TagOptionsMap.getTitle(tags), options);\n        });\n\n        let selected = [];\n        TagArrayMap.forEach(this.props.tagged, (key, tagArray) => {\n            TagArray.getTags(tagArray).map(id => {\n                selected.push(\n                this.mergeKey(key, id)\n            )});\n        });\n\n        let userOptions = MapModel.mapToArray(this.props.taggedMap, key => ({\n            key: key,\n            value: key,\n            text: key\n        }));\n\n        if(this.state.added) {\n            userOptions.push({\n                key: this.state.added,\n                value: this.state.added,\n                text: this.state.added\n            });\n        }\n\n        let selectedUser = this.state.added;\n        if(TagArrayMap.getId(this.props.tagged).localeCompare(EditModelSelector.userKey)) {\n            selectedUser = TagArrayMap.getId(this.props.tagged);\n        }\n\n        return (\n            <BasicModalForm {...this.props} onSubmit={\n                () => this.onSubmit(selectedUser)\n            }>\n                <Form.Dropdown\n                    label={this.props.labelTitle}\n                    name=\"address\"\n                    required\n                    placeholder={this.props.labelTitle}\n                    search\n                    selection\n                    allowAdditions\n                    options={userOptions}\n                    onChange={this.handleNewChange.bind(this)}\n                    onAddItem={this.handleAddItem.bind(this)}\n                    value={selectedUser}\n                />\n                <Form.Dropdown \n                    label={this.props.labelTags} \n                    name=\"dropdown\" \n                    required \n                    placeholder={this.props.labelTags} \n                    multiple \n                    search \n                    selection \n                    options={options} \n                    renderLabel={this.renderLabel.bind(this)}\n                    onChange={this.handleChange.bind(this)}\n                    value={selected}\n                    validations=\"minLength:1\"\n                />\n            </BasicModalForm>\n        );\n    }\n}","import { connect } from 'react-redux';\n\nimport { SelectSelector, TagSelector} from \"../EditTagView/imports\";\nimport * as actions from \"../actions\";\nimport ValidatedEditTagView from \"../EditTagView/EditTagView\";\nimport EditModelSelector from '../../models/selectors/EditModelSelector';\nimport { withDefaultDispatch, withDefaultMerge, withDefaultMap } from '../EditModal/EditModal';\nimport {EditUserView} from './EditUserView';\nimport { User, SpecialRoleSelector, UserSelector, TagsMap, ContractTagsMap } from '../../models';\nimport EditModel from '../../models/EditModel';\nimport TagOptionsMap from '../../models/maps/TagOptionsMap';\nimport { connectWithDefault } from '../connectWithDefault';\n\nexport const mapStateToProps = (state) => {    \n    //let model = EditModelSelector.getUserAddModel(state);\n    let model = EditModelSelector.getSelectedModel(state);\n    let tags = TagSelector.getContractSelected(state);\n    tags = TagOptionsMap.fromTagsMap(User.roleKey, \"Link Roles\", \"tag\", tags);\n    let specials = SpecialRoleSelector.getContractSelected(state);\n    specials = TagOptionsMap.fromTagsMap(User.specialKey, \"Special Roles\", \"star\", specials);\n\n    let options = new ContractTagsMap(\n        \"options\",\n        specials,\n        tags\n    );\n\n    return {\n        header: \"Add User\",\n        labelTitle: \"User Address\",\n        labelTags: \"User Roles\",\n        options: options,\n        tagged: UserSelector.getContractSelectedUser(state, EditModel.getId(model)),\n        taggedMap: UserSelector.getContractSelected(state)\n    };\n}\n\nexport const mapDispatchToProps = (dispatch) => {\n    return {\n        onSubmit: (address, user, specialRoles, roles, origUser) => dispatch(actions.onAddUser(address, user, specialRoles, roles, origUser)),\n    };\n}\n\nexport const mergeProps = (stateProps, dispatchProps, ownProps) => {\n    return {\n        onSubmit: (user, tags, specials) => dispatchProps.onSubmit(stateProps.address, user, specials, tags, stateProps.tagged),\n    };\n}\n\nexport default connectWithDefault(mapStateToProps, mapDispatchToProps, mergeProps)(EditUserView);","import { connect } from 'react-redux';\n\nimport EditModelSelector from \"../../models/selectors/EditModelSelector\";\nimport { TagSelector, User, ContractTagsMap, SelectSelector, LinkSelector, Link } from \"../../models\";\nimport TagOptionsMap from \"../../models/maps/TagOptionsMap\";\nimport EditModel from \"../../models/EditModel\";\nimport { dispatch } from \"rxjs/internal/observable/pairs\";\nimport { withDefaultDispatch, withDefaultMerge, withDefaultMap } from \"../EditModal/EditModal\";\nimport * as actions from \"../actions\";\nimport { EditUserView } from \"./EditUserView\";\nimport { connectWithDefault } from '../connectWithDefault';\n\nexport const mapStateToProps = (state) => {\n    let tags = TagSelector.getContractSelected(state);\n    tags = TagOptionsMap.fromTagsMap(Link.tagsKey, \"Link Types\", \"tag\", tags);\n\n    let options = new ContractTagsMap(\"options\", tags);\n\n    return ({\n        header: \"Add Link\",\n        labelTitle: \"Link Address\",\n        labelTags: \"Link Types\",\n        options: options,\n        tagged: LinkSelector.getEditSelectedLink(state),\n        //todo-sv: links from contract selected or from link selected?\n        taggedMap: LinkSelector.getEditSelectedLinks(state)\n    });\n}\n\nexport const mapDispatchToProps = (dispatch) => {\n    return ({\n        onSubmit: (address, link, tags, origLink) => dispatch(actions.onEditLink(address, link, tags, origLink)),\n    });\n}\n\nexport const mergeProps = (stateProps, dispatchProps, ownProps) => {\n    return ({\n        onSubmit: (link, tags) => dispatchProps.onSubmit(stateProps.address, link, tags, stateProps.tagged),\n    });\n}\n\nexport default connectWithDefault(mapStateToProps, mapDispatchToProps, mergeProps)(EditUserView);","import { User } from \"../models\";\n\nexport const types = {\n    userLoaded: \"USER_LOADED\"\n};\n\nexport const onUserLoaded = (address, specialRoles, roles, isOwner) => ({\n    type: types.userLoaded,\n    user: new User(address, specialRoles, roles, isOwner)\n});","import { ofType, combineEpics } from \"redux-observable\";\nimport * as actions from \"../actions\";\nimport { withWeb3ContractFrom, withAccountInfo } from \"../../operators\";\nimport { flatMap, map, catchError } from \"rxjs/operators\";\nimport { defer, of } from \"rxjs\";\nimport { detailObsFactory, arrayObsRecFactory } from \"../detailObsFactory\";\nimport * as userActions from \"../../UsersView/actions\";\nimport EditModelSelector from \"../../models/selectors/EditModelSelector\";\nimport { User } from \"../../models\";\nimport * as selectActions from \"../../SelectReducer/actions\";\n\nexport const reselctEpic = (actions$) => actions$.pipe(\n    ofType(actions.types.reselect),\n    flatMap(action => {\n        return of(\n            actions.onEditModalOpen(false, action.address, action.current),\n            actions.onEditModalClear(action.address, action.current),\n            //todo-sv: this is wrong, currently this epic gets triggered by addUser and addLink component\n            actions.onEditModalOpen(true, action.address, action.id, action.modal)\n        );\n    })\n);\n\nexport const addUserEpic = (action$, state$) => action$.pipe(\n    ofType(actions.types.addUser),\n    withWeb3ContractFrom(state$),\n    withAccountInfo(),\n    flatMap(({action, account, web3Instance}) => {\n\n        let user = action.payload.user;\n        let origUser = action.payload.origUser;\n\n        let removedSpecial = User.getSpecialRoles(origUser).filter(role => !User.hasSpecialRole(user, role));\n        let addedSpecial = User.getSpecialRoles(user).filter(role => !User.hasSpecialRole(origUser, role));\n        let removedLink = User.getRoles(origUser).filter(role => !User.hasRole(user, role));\n        let addedLink = User.getRoles(user).filter(role => !User.hasRole(origUser, role));\n\n        let web3ObsFactory = () => web3Instance.methods.changeUser(\n            User.getAddress(user), \n            addedSpecial, removedSpecial,\n            addedLink, removedLink\n        ).send({from: account});\n\n        return defer(() => arrayObsRecFactory(\n            removedSpecial,\n            () => arrayObsRecFactory(\n                addedSpecial,\n                () => arrayObsRecFactory(\n                    removedLink,\n                    () => arrayObsRecFactory(\n                        addedLink,\n                        () => detailObsFactory(\n                            User.getAddress(user),\n                            User.getAddress(origUser),\n                            web3ObsFactory\n                        ),\n                        web3ObsFactory\n                    ),\n                    web3ObsFactory\n                ),\n                web3ObsFactory\n            ),\n            web3ObsFactory\n        )).pipe(\n            flatMap(res => {\n                if(res.noChange) {\n                    return of(actions.onEditModalClear(action.address, EditModelSelector.userKey));\n                }\n\n                return of(\n                    userActions.onUserLoaded(\n                        User.getAddress(user),\n                        User.getSpecialRoles(user),\n                        User.getRoles(user),\n                        User.isOwner(user)\n                    ),\n                    actions.onEditSuccess(action.address, action.id)\n                );\n            }),\n            catchError(err => {\n                console.log(err);\n                return of(actions.onEditError(action.address, action.id, {\n                    msg: \"Could not add user to contract!\",\n                    header: \"User add error\",\n                }));\n            })\n        )\n    })\n);\n\nexport const epic = combineEpics(addUserEpic, reselctEpic);","import React, {Fragment} from 'react';\nimport EditModal from '../EditModal';\nimport { Container, Header } from 'semantic-ui-react';\nimport { connectWithDefault } from '../connectWithDefault';\nimport { withDefaultBehavior } from '../withDefaultBehavior';\nimport { modalPropsFrom } from '../EditModal/EditModal';\nimport { ProvRecordsMap, ProvRecordsSelector, ProvRecords } from '../../models';\nimport { dispatch } from 'rxjs/internal/observable/pairs';\nimport EditModel from '../../models/EditModel';\n\nexport const EditDetailsView = ({records = new ProvRecords(), ...props}) => {\n\n    let recordsView = records.getRecords().map((value, index) => {\n        return (\n            <Fragment>\n                <Header as=\"h3\">Record #{index}</Header>\n                <p>\n                    {value}\n                </p>\n            </Fragment>\n        );\n    });\n\n    return(\n        <EditModal\n            {...modalPropsFrom(\n                props, \n                () => {}, \n                \"Provenance Records\",\n                {\n                    hidden: true\n                }\n            )}\n            scrolling={true}\n        >\n            <Container text>\n                {recordsView}\n            </Container>\n        </EditModal>\n    );\n}\n\nexport const mapStateToProps = (state) => {\n    return {\n        records: ProvRecordsSelector.getSelectedProvRecords(state)\n    };\n};\n\nexport const mergeProps = (stateProps, dispatchProps, ownProps) => {\n    return ({\n        onClose: () => {\n            dispatchProps.onClose(\n                stateProps.address,\n                EditModel.getId(stateProps.editModel), \n                EditModel.getModal(stateProps.editModel)\n            );\n\n            if(EditModel.isSuccess(stateProps.editModel)) {\n                dispatchProps.onClear(\n                    stateProps.address,\n                    EditModel.getId(stateProps.editModel),\n                )\n            }\n        }\n    });\n}\n\nexport default connectWithDefault(mapStateToProps, undefined, mergeProps)(withDefaultBehavior(EditDetailsView));","import React from 'react';\nimport { Icon } from 'semantic-ui-react';\n\nexport const ErrorIcon = (props) => {\n    return (<Icon name=\"warning\" color=\"red\" {...props} />);\n}","import React from 'react';\nimport { Icon } from 'semantic-ui-react';\n\nexport const SuccessIcon = (props) => {\n    return (<Icon name=\"check\" color=\"green\" {...props} />);\n}","import React from 'react';\nimport { Menu, Icon, Dimmer, Loader } from 'semantic-ui-react';\nimport EditModel from '../models/EditModel';\nimport { ErrorIcon } from '../DefaultIcons/ErrorIcon';\nimport { SuccessIcon } from '../DefaultIcons/SuccessIcon';\n\nexport const FancyButtonItem = ({onClick, editModel = new EditModel(), icon, childIcon, disabled}) => {\n    return (\n        <Menu.Item onClick={() => onClick()} disabled={disabled}>\n            <Dimmer active={editModel.isLoading()}>\n                <Loader />\n            </Dimmer>\n            <Dimmer active={editModel.isSuccess()}>\n                <SuccessIcon size=\"big\"/>\n            </Dimmer>\n            <Dimmer active={editModel.isError()}>\n                <ErrorIcon size=\"big\"/>\n                {/* <Icon name=\"warning\" color=\"red\" size=\"big\" /> */}\n            </Dimmer>\n            <Icon.Group size=\"big\">\n                <Icon name={icon}/>\n                <Icon name={childIcon} color=\"blue\" corner disabled={disabled}/>\n            </Icon.Group>\n        </Menu.Item>\n    );\n};","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { Menu, Icon, Form } from 'semantic-ui-react';\n\nimport * as modelActions from '../modelActions';\nimport {editModelActions} from \"../EditViews\";\n\nimport logo from './logo.svg';\nimport { SelectSelector } from '../models';\nimport { FancyButtonItem } from './FancyButtonItem';\nimport EditModelSelector from '../models/selectors/EditModelSelector';\n\nexport class TopMenu extends React.Component{\n    \n    constructor(props) {\n        super(props);\n    }\n    \n    handleChange = (e, { name, value }) => this.setState({\n        address: value\n    });\n\n    onSubmit = () => this.props.searchSubmit(this.state.address);\n\n    render() {\n        return (\n            <Menu stackable icon>\n                <Menu.Item>\n                    <img src={logo} />\n                </Menu.Item>\n\n                <FancyButtonItem \n                    icon=\"file alternate outline\" \n                    childIcon=\"add\" \n                    editModel={this.props.deploy}\n                    onClick={this.props.onDeploy}\n                />\n\n                <FancyButtonItem \n                    icon=\"file alternate outline\" \n                    childIcon=\"edit\" \n                    editModel={this.props.edit}\n                    onClick={this.props.onEdit}\n                    disabled={!this.props.isContractSelected}\n                />\n\n                <FancyButtonItem \n                    icon=\"file alternate outline\" \n                    childIcon=\"tag\" \n                    onClick={this.props.onAddTag}\n                    disabled={!this.props.isContractSelected}\n                />\n\n                <FancyButtonItem \n                    icon=\"file alternate outline\" \n                    childIcon=\"user\"\n                    editModel={this.props.user}\n                    onClick={this.props.onAddUser}\n                    disabled={!this.props.isContractSelected}\n                />\n\n                <FancyButtonItem \n                    icon=\"file alternate outline\" \n                    childIcon=\"linkify\"\n                    editModel={this.props.link}\n                    onClick={this.props.onAddLink}\n                    disabled={!this.props.isContractSelected}\n                />\n\n                <Menu.Menu position=\"right\">\n                    <Menu.Item>\n                        <Form onSubmit={this.onSubmit}>\n                            <Form.Input \n                            name=\"address\" \n                            onChange={this.handleChange}\n                            icon={\n                                <Icon name='search' inverted circular link onClick={this.onSubmit} />\n                            } \n                            placeholder='Contract Address...'>\n                            </Form.Input>\n                        </Form>\n                    </Menu.Item>\n                </Menu.Menu>\n            </Menu>\n        );\n    }\n}\n\n//container part\nexport const mapStateToProps = (state) => {\n    return {\n        isContractSelected: SelectSelector.isContractSelected(state), \n        selectedContract: SelectSelector.getSelectedContract(state),\n        deploy: EditModelSelector.getNewContractModel(state),\n        edit: EditModelSelector.getContractDetailsModel(state),\n        user: EditModelSelector.getUserAddModel(state),\n        link: EditModelSelector.getLinkAddModel(state)\n    };\n}\n\nexport const mapDispatchToProps = (dispatch) => {\n    return {\n        searchSubmit: (address) => dispatch(modelActions.onContractSelect(address)),\n        onDeploy: () => dispatch(editModelActions.onDeployContractOpen(true)),\n        onEdit: (selected) => dispatch(editModelActions.onEditDetailsModalOpen(true, selected)),\n        onAddTag: (selected) => dispatch(editModelActions.onEditTagModalOpen(true, selected, EditModelSelector.tagKey)),\n        onAddUser: (selected) => dispatch(\n            editModelActions.onEditUserModalOpen(\n                true, selected, EditModelSelector.userKey,\n            )\n        ),\n        onAddLink: (selected) => dispatch(\n            editModelActions.onEditLinkModalOpen(\n                true, selected, EditModelSelector.linkKey\n            )\n        )\n    };\n}\n\nexport const mergeProps = (stateProps, dispatchProps, ownProps) => {\n    return Object.assign({}, ownProps, stateProps, dispatchProps, {\n        onEdit: () => dispatchProps.onEdit(stateProps.selectedContract),\n        onAddTag: () => dispatchProps.onAddTag(stateProps.selectedContract),\n        onAddUser: () => dispatchProps.onAddUser(stateProps.selectedContract),\n        onAddLink: () => dispatchProps.onAddLink(stateProps.selectedContract)\n    });\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(TopMenu);","import Component from \"./TopMenu\";\n\nexport default {Component,};","export const types = {\n    initWeb3: \"INIT_WEB3\",\n    initWeb3Success: \"INIT_WEB3_SUCCESS\",\n    initWeb3Failed: \"INIT_WEB3_FAILED\",\n};\n\nexport const startInit = (address, uri) => ({\n    type: types.initWeb3,\n    address: address,\n    uri: uri\n    //web3: web3,\n});\n\nexport const initSuccess = (web3) => ({\n    type: types.initWeb3Success,\n    web3: web3\n});\n\nexport const initFailed = (err)  => ({\n    type: types.initWeb3Failed,\n    error: err,\n});","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\n\nimport { Dimmer, Loader, Header, Icon } from 'semantic-ui-react';\n\nimport * as actions from './actions';\n\n//todo-sv: https://bit.ly/2QQHXvF This will need addressing soon.\n\nclass Web3Loader extends Component {\n    componentDidMount() {\n        this.props.startWeb3Init();\n    }\n\n    render() {\n        return (\n            <div>\n                <Dimmer active={this.props.active}>\n                    <Loader size=\"massive\">Loading...</Loader>\n                </Dimmer>\n                <Dimmer active={this.props.failed}>\n                    <Header as='h2' icon inverted>\n                        <Icon name='warning sign' />\n                        MetaMask plugin not found!\n                    </Header>\n                </Dimmer>\n            </div>\n        );\n    }\n}\n\n// Loader.propTypes = {\n//     startLoading: PropTypes.func.isRequired,\n// }\n\nconst mapStateToProps = (state) => {\n    return {\n        active: state[\"web3Loader\"].active,\n        failed: state[\"web3Loader\"].failed,\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    console.log(actions.startInit());\n    return {\n        startWeb3Init: (address, url) => dispatch(actions.startInit(address, url)),\n    };\n}\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    let params = new URLSearchParams(ownProps.location.search);\n\n    return Object.assign({}, ownProps, stateProps, dispatchProps, {\n        startWeb3Init: () => dispatchProps.startWeb3Init(ownProps.match.params.contract, params.get(\"target\")),\n    });\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(Web3Loader);\n","import { Uri, ProvRecords } from \"../models\";\n\nexport const types = {\n    uriLoaded: \"URI_LOADED\",\n    provRecordsLoaded: \"PROV_RECORDS_LOADED\",\n    showProvRecords: \"SHOW_PROV_RECORDS\",\n    loadProvRecords: \"LOAD_PROV_RECORDS\"\n}\n\nexport const onURILoaded = (id, uri) => ({\n    type: types.uriLoaded,\n    uri: new Uri(id, uri)\n});\n\nexport const onProvRecordsLoaded = (uri, records) => ({\n    type: types.provRecordsLoaded,\n    provRecords: new ProvRecords(uri, records)\n});\n\nexport const onProvRecordsShow = (address, uri, loaded) => ({\n    type: types.showProvRecords,\n    address,\n    uri,\n    loaded\n});\n\nexport const onProvRecordsLoad = (address, uri) => ({\n    type: types.loadProvRecords,\n    address,\n    uri\n});","import Component from \"./Loader\";\nimport {reducer, web3, epic} from \"./reducer\";\n\nexport default {Component, reducer, epic, web3};","import { filter, delay, map, withLatestFrom, flatMap } from 'rxjs/operators';\nimport { combineEpics, ofType } from 'redux-observable';\nimport Web3 from 'web3';\nimport * as actions from \"./actions\";\nimport { of } from 'rxjs';\nimport * as modelActions from \"../modelActions\";\nimport { editModelActions } from '../EditViews';\nimport * as recordActions from \"../ProvenanceView/actions\";\n\nconst web3LoaderEpic = (action$, state$) => action$.pipe(\n    ofType(actions.types.initWeb3),\n    withLatestFrom(state$),\n    filter(([, state]) => state.web3 === null),\n    delay(1000),//this is only for estetics\n    flatMap(([action]) => {\n        if(window.web3 === undefined) {\n            return of(actions.initFailed(\"No metamask found!\"));\n        }\n        return of(\n            actions.initSuccess(new Web3(window.web3.currentProvider)),\n            modelActions.onContractSelectInit(action.address),\n            recordActions.onProvRecordsShow(action.address, action.uri, false)\n        );\n    })\n);\n\nexport const epic = combineEpics(\n    web3LoaderEpic,\n);\n\nexport const reducer = (state={web3: undefined, active: true, failed: false}, action) => {\n    switch(action.type) {\n        case actions.types.initWeb3Success:\n            return Object.assign({}, state, {\n                active: false,\n                failed: false\n            });\n        case actions.types.initWeb3Failed:\n            return Object.assign({}, state, {\n                active: false,\n                failed: true\n            });\n        //todo-sv: add error handling\n        default:\n            return state;\n    }\n}\n\nexport const web3 = (state=null, action) => {\n    switch(action.type) {\n        case actions.types.initWeb3Success:\n            return action.web3;\n        default:\n            return state;\n    }\n}","import Component from \"./LinkNav\";\n\nexport default Component;","import React, {Fragment} from 'react';\nimport { connect } from 'react-redux';\nimport { Breadcrumb, Label } from 'semantic-ui-react';\nimport * as actions from '../../modelActions';\nimport { SelectSelector, ProvContractSelector } from '../../models';\n\nexport const LinkNav = ({selection, titles, linkSelect}) => {\n    \n    let sections = selection.map((selected, index) => {\n        let divider = \"\";\n        if(index < (selection.length-1)) {\n            divider = (<Breadcrumb.Divider icon='right chevron' />);\n        }\n\n        return (\n            <Fragment key={index}>\n                <Breadcrumb.Section key={selected}>\n                    <Label as='a' color=\"grey\" \n                        onClick={(e, data) => linkSelect(selected)}\n                    >\n                        {titles[index]}\n                    </Label>\n                </Breadcrumb.Section>\n                {divider}\n            </Fragment>\n        );\n    });\n\n    return (\n        <Breadcrumb>\n            {sections}\n        </Breadcrumb>\n    );\n};\n\nexport const mapStateToProps = (state) => {\n    return {\n        selection: SelectSelector.getSelectedList(state),\n        titles: ProvContractSelector.getLinkSelectedContractTitles(state)\n    };\n}\n\nexport const mapDispatchToProps = (dispatch) => {\n    return {\n        linkSelect: (address) => dispatch(actions.onLinkSelect(address))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LinkNav);","import Component from \"./LinkRow\";\n\nexport default Component;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Label, Table, Button } from 'semantic-ui-react';\nimport TagView from '../../../TagView';\nimport * as actions from '../../../modelActions';\nimport { ClosableTagButton } from '../../../TagView/TagButton';\nimport { Link } from '../../../models';\n\nexport const LinkRow = ({types, link = new Link(), linkSelect, contractSelect}) => {\n    \n    let tags = link.getTags().map(\n        (tagId) => <ClosableTagButton key={tagId} tag={types[tagId]}/>\n    );\n\n    return (\n        <Table.Row>\n            <Table.Cell>\n                {/* <Label as=\"a\" ribbon \n                    onClick={(e, data) => linkSelect(link.getAddress())}\n                > */}\n                    {link.address}\n                {/* </Label> */}\n            </Table.Cell>\n            <Table.Cell>{link.title}</Table.Cell>\n            <Table.Cell>\n                {tags}\n            </Table.Cell>\n            <Table.Cell>\n                    {/* <Button icon='info' content=\"Info\" labelPosition='left'/> */}\n                    <Button onClick={() => linkSelect(link.getAddress())} icon='eye' content=\"Links\" labelPosition='left'/>\n                    <Button onClick={() => contractSelect(link.getAddress())} icon='file alternate outline' content=\"Select\" labelPosition='left'/>\n            </Table.Cell>\n        </Table.Row>\n    );\n}\n\nexport const mapDispatchToProps = (dispatch) => {\n    return {\n        linkSelect: (address) => dispatch(actions.onLinkSelect(address)),\n        contractSelect: (address) => dispatch(actions.onContractSelect(address))\n    }\n}\n\nexport default connect(undefined, mapDispatchToProps)(LinkRow);","import Component from \"./LinksTable\";\n\nexport default {Component,};","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { Table } from 'semantic-ui-react';\n\nimport LinkRow from './LinkRow';\nimport { TagSelector, LinkSelector, LinkMap, TagsMap } from '../../models';\n\nexport const LinksTable = ({tags = new TagsMap(), links = new LinkMap()}) => {\n\n    let linkRows = links.mapToArray((key, link) => {\n        return (\n            <LinkRow key={link.address} types={tags.getItems()} link={link} />\n        );\n    });\n\n    // let linkRows = [];\n    // for(let key in links) {\n    //     let link = links[key];\n    //     linkRows.push(\n    //         <LinkRow key={link.address} types={tags} link={link} />\n    //     );\n    // }\n\n    return (\n        <Table singleLine selectable>\n            <Table.Header>\n            <Table.Row>\n                <Table.HeaderCell>Address</Table.HeaderCell>\n                <Table.HeaderCell>Title</Table.HeaderCell>\n                <Table.HeaderCell>Types</Table.HeaderCell>\n                <Table.HeaderCell>Actions</Table.HeaderCell>\n            </Table.Row>\n            </Table.Header>\n\n            <Table.Body>\n                {linkRows}\n            </Table.Body>\n        </Table>\n    );\n}\n\n//container part\nexport const mapStateToProps = (state) => {\n    return {\n        tags: TagSelector.getLinkSelected(state),\n        links: LinkSelector.getLinkSelectedLinks(state)\n        //links: MapModel.getItems(MapModel.get(RootSelector.getLinks(state), linkAddress))\n    };\n}\n\nexport default connect(mapStateToProps)(LinksTable);","import Component from \"./LinksView\";\n\nexport default {Component,};","import React, {Fragment} from 'react';\nimport { connect } from 'react-redux';\n\nimport { Grid, Header, Table } from 'semantic-ui-react';\n\nimport LinkNav from './LinkNav';\nimport LinksTable from './LinksTable';\n\nexport const LinksView = ({tags, links}) => {\n\n    return (\n        <Fragment>\n            <LinkNav/>\n            <LinksTable.Component/>\n        </Fragment>\n    );\n}\n\n\nexport default LinksView;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Item, Button, Image, Icon, Label, Dimmer, Loader, Segment } from 'semantic-ui-react';\nimport {withDefaultImage} from \"../withDefaultImage\";\nimport { ContractDetails, ProvContract, ProvContractSelector } from '../models';\n\n//component part\nexport const ContractDetailsView = (props) => {\n    return (\n           \n        <Item.Group>\n            <Item>\n                <Item.Image src={props.imageUrl} size='small' circular/>\n\n                <Item.Content>\n                    <Item.Header>\n                        Description                        \n                    </Item.Header>\n                    <Item.Description>\n                        {props.description}\n                    </Item.Description>\n                </Item.Content>\n            </Item>\n        </Item.Group>\n    );\n}\n\nexport const mapStateToProps = (state) => {\n    let selected = ProvContractSelector.getSelected(state);\n    return {\n        imageUrl: ContractDetails.getLogoUrl(ProvContract.getDetails(selected)),\n        description: ContractDetails.getDescription(ProvContract.getDetails(selected))\n    };\n}\n\nexport default connect(mapStateToProps)(withDefaultImage(ContractDetailsView));","import {reducer, epic} from \"./reducer\";\nimport * as selectActions from \"./actions\";\nexport {selectActions};\nexport default {reducer, epic};","import * as modelActions from \"../modelActions\";\nimport { ofType, combineEpics } from \"redux-observable\";\nimport { map, withLatestFrom, flatMap, filter } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport { SelectSelector, Select } from \"../models\";\nimport { push } from 'connected-react-router';\n\nconst selectContractEpic = (action$) => action$.pipe(\n    ofType(modelActions.types.contractSelect, modelActions.types.contractSelectInit),\n    filter(action => action.address !== undefined),\n    flatMap(action => {\n        if(action.type == modelActions.types.contractSelectInit) {\n            return of(\n                modelActions.onContractLoad(action.address),\n            );\n        }\n\n        return of(\n            modelActions.onContractLoad(action.address),\n            push(\"/ProvNet/contracts/\"+action.address)//todo-sv: this url string should not be all over the place =_=\n        );\n    }),\n);\n\nconst contractLoadedEpic = (action$, state$) => action$.pipe(\n    ofType(modelActions.types.contractDetailsLoaded),\n    withLatestFrom(state$),\n    filter(([action, state]) => \n        action.address === SelectSelector.getSelectedContract(state)\n    ),\n    map(([action]) => modelActions.onContractSelected(action.address)),\n);\n\nexport const epic = combineEpics(\n    selectContractEpic,\n    contractLoadedEpic,\n);\n\nexport const reducer = (state=new Select(), action) => {\n    switch(action.type) {\n        case modelActions.types.contractSelectInit:\n        case modelActions.types.contractSelectHistory:\n        case modelActions.types.contractSelect:\n            return state.setSelected(action.address);\n        case modelActions.types.linkSelected:\n            return state.setLinkSelected(action.address);\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { Segment, Header, List, Icon } from 'semantic-ui-react';\nimport { TagButton } from '../TagView/TagButton';\nimport {TagsMap, TagSelector, SelectSelector} from '../models';\nimport EditModelSelector from '../models/selectors/EditModelSelector';\nimport EditModelMap from '../models/maps/EditModelMap';\nimport EditModel from '../models/EditModel';\nimport * as editModelActions from \"../EditViews/actions\";\nimport {selectActions} from \"../SelectReducer\";\nimport { ErrorIcon } from '../DefaultIcons/ErrorIcon';\nimport { SuccessIcon } from '../DefaultIcons/SuccessIcon';\n\nexport const TagsListView = ({tags, list = new TagsMap(), onEditTag, tagModals}) => {\n\n    let labels = [];\n    tags = list.getItems();\n    console.log(tags);\n\n    //todo-sv: the list items should be filled in the parent element and this one should only encapsulate them\n    //compound components: https://medium.com/@Dane_s/react-js-compound-components-a6e54b5c9992 \n    for(let key in tags) {\n        let tag = tags[key];\n        \n        let modal=undefined;\n        if(tagModals) {\n            //modal = EditModalTagList.getModal(tagModals, key);\n            modal = EditModelMap.get(tagModals, key);\n        }\n        \n        let isLoading = false;\n        if(modal) {\n            isLoading = EditModel.isLoading(modal);\n        }\n\n        let icon = (<Icon name='edit' fitted/>);\n        \n        if(modal && EditModel.isSuccess(modal)) {\n            icon = (<SuccessIcon fitted/>);\n        }\n\n        if(modal && EditModel.isError(modal)) {\n            icon = (<ErrorIcon fitted/>);\n        }\n\n        labels.push(\n            <List.Item key={tag.getId()}>\n                <TagButton tag={tag} icon={icon} parentClick={() => onEditTag(tag.getId())} loading={isLoading} />\n            </List.Item>\n        );\n    }\n\n    return (\n        <Segment>\n            <Header as=\"h2\" dividing>Link Types:</Header>\n            <List horizontal size=\"tiny\">\n                {/* Necessary to align list properly. See https://github.com/Semantic-Org/Semantic-UI/issues/4501 */}\n                <List.Item></List.Item>\n                {labels}\n            </List>\n        </Segment>\n    );\n}\n\nexport const mapStateToProps = (state) => {\n    let selectedAddress = SelectSelector.getSelectedContract(state);\n    return {\n        selectedContract: selectedAddress,\n        tagModals: EditModelSelector.getContractSelected(state),\n        list: TagSelector.getContractSelected(state)\n    }\n}\n\nexport const mapDispatchToProps = (dispatch) => {\n    return {\n        onEditTag: (selected, tagId) => dispatch(editModelActions.onEditTagModalOpen(true, selected, tagId))\n    }\n}\n\nexport const mergeProps = (stateProps, dispatchProps, ownProps) => {\n    return Object.assign({}, ownProps, stateProps, dispatchProps, {\n        onEditTag: (tagId) => dispatchProps.onEditTag(stateProps.selectedContract, tagId)\n    });\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(TagsListView);","import TagsMap from \"./TagsMap\";\n\nexport default class UriMap extends TagsMap {\n}","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { Table, Label, TableCell, Segment, Button, TextArea, Container } from 'semantic-ui-react';\nimport { UriSelector, Uri, SelectSelector } from '../models';\nimport UriMap from '../models/maps/UriMap';\nimport * as actions from \"./actions\";\nimport EditModelSelector from '../models/selectors/EditModelSelector';\nimport EditModelMap from '../models/maps/EditModelMap';\nimport {editModelActions} from \"../EditViews\";\nimport EditModel from '../models/EditModel';\nimport { push } from 'connected-react-router';\n\nexport const ProvenanceTable = ({uris, onShowProv, editModels = new EditModelMap()}) => {\n\n    let linkRows = UriMap.mapToArray(uris, (key, uri) => {\n        let title = Uri.getTitle(uri);\n        let model = editModels.get(title);\n        let color;\n        if(EditModel.isSuccess(model)) {\n            color = \"green\";\n        }\n        return(\n            <Table.Row>\n                <TableCell>{title}</TableCell>\n                <TableCell collapsing>\n                <Button icon='download' color={color} loading={EditModel.isLoading(model)} onClick={() => onShowProv(title, model)}/>\n                </TableCell>\n            </Table.Row>\n        );\n    });\n\n    return (\n        <Table selectable>\n            <Table.Header>\n                <Table.Row>\n                    <Table.HeaderCell>URL</Table.HeaderCell>\n                    <Table.HeaderCell>Content</Table.HeaderCell>\n                </Table.Row>\n            </Table.Header>\n\n            <Table.Body>\n                {linkRows}\n            </Table.Body>\n        </Table>\n    );\n}\n\n//container part\nexport const mapStateToProps = (state) => {\n    return {\n        address: SelectSelector.getSelectedContract(state),\n        uris: UriSelector.getContractSelected(state),\n        editModels: EditModelSelector.getContractSelected(state)\n    };\n}\n\nexport const mapDispatchToProps = (dispatch) => {\n    return {\n        onShowProv: (address, uri, editModel) => {\n            let encUri = encodeURIComponent(uri);\n            dispatch(push(\"/ProvNet/contracts/\"+address+\"?target=\"+encUri));\n            dispatch(actions.onProvRecordsShow(address, uri, EditModel.isSuccess(editModel)));\n        }\n    }\n}\n\nexport const mergeProps = (stateProps, dispatchProps, ownProps) => {\n    return Object.assign({}, stateProps, dispatchProps, {\n        onShowProv: (uri, model) => dispatchProps.onShowProv(stateProps.address, uri, model)\n    }, ownProps);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(ProvenanceTable);","import React from 'react';\nimport * as modelActions from \"../modelActions\";\nimport * as actions from \"./actions\";\nimport { ofType, combineEpics } from \"redux-observable\";\nimport { withWeb3ContractFrom, withContentFromIDArray } from \"../operators\";\nimport UriMap from \"../models/maps/UriMap\";\nimport { map, flatMap, reduce, filter } from \"rxjs/operators\";\nimport { from, of } from \"rxjs\";\nimport { Uri, ProvRecordsMap } from \"../models\";\nimport { editModelActions } from '../EditViews';\n\nexport const uriEpic = (action$, state$) => action$.pipe(\n    ofType(modelActions.types.contractLoad),\n    withWeb3ContractFrom(state$),\n    withContentFromIDArray(\"getUrls\", \"getUrl\"),\n    map(({result}) => actions.onURILoaded(result[0], result[1]))\n);\n\nexport const showProvenanceEpic = (action$) => action$.pipe(\n    ofType(actions.types.showProvRecords),\n    filter(action => action.address !== undefined),\n    filter(action => action.uri !== undefined && action.uri !== null),\n    flatMap(action => {\n\n        if(!action.loaded) {\n            return of(\n                editModelActions.onProvRecordsOpen(true, action.address, action.uri),\n                editModelActions.onShowProvenance(action.address, action.uri),\n                actions.onProvRecordsLoad(action.address, action.uri)\n            );\n        }\n\n        return of(\n            editModelActions.onProvRecordsOpen(true, action.address, action.uri)\n        );\n    })\n);\n\nexport const provenancePdfEpic = (action$, state$) => action$.pipe(\n    ofType(actions.types.loadProvRecords),\n    withWeb3ContractFrom(state$),\n    flatMap(({action, web3Instance}) => {\n        return from(\n            web3Instance.methods.getProvenanceRecords(action.uri).call()\n        ).pipe(\n            flatMap(res => {\n                return from(new Array(res).map((value, key) => key));\n            }),\n            flatMap(index => {\n                return from(\n                    web3Instance.methods.getProvenanceRecord(\n                        action.uri, index\n                    ).call()\n                )\n            }),\n            reduce((records, record) => {\n                records.push(record);\n                return records;\n            }, []),\n            flatMap(records => {\n                return of(\n                    actions.onProvRecordsLoaded(action.uri, records),\n                    editModelActions.onEditSuccessNoClear(action.address, action.uri)\n                );\n            })\n        )\n    }),\n);\n\nexport const epic = combineEpics(uriEpic, showProvenanceEpic, provenancePdfEpic);\n\nexport const reducer = (\n    state = new UriMap(),\n    action\n) => {\n    switch(action.type) {\n        case modelActions.types.contractLoad:\n            return UriMap.reset(state);\n        case actions.types.uriLoaded:\n            return UriMap.add(state, action.uri);\n        default:\n            return state;\n    }\n};\n\nexport const provRecordReducer = (\n    state = new ProvRecordsMap(),\n    action\n) => {\n    switch(action.type) {\n        case modelActions.types.contractLoad:\n            return state.reset();\n        case actions.types.provRecordsLoaded:\n            return state.add(action.provRecords);\n        default:\n            return state;\n    }\n};","import {TagsMap} from \"../models\";\n\nexport default class SpecialRolesMap extends TagsMap {\n    \n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Table, TableCell, Button, Icon } from 'semantic-ui-react';\nimport TagView from \"../TagView\";\nimport { Tag, TagSelector, User, SpecialRoleSelector, TagsMap, UserSelector, SelectSelector } from '../models';\nimport { TagButton } from '../TagView/TagButton';\nimport SpecialRolesMap from './SpecialRolesMap';\nimport UsersMap from '../models/maps/UsersMap';\nimport * as selectActions from \"../SelectReducer/actions\";\nimport {editModelActions} from \"../EditViews\";\nimport EditModelSelector from '../models/selectors/EditModelSelector';\nimport EditModelMap from '../models/maps/EditModelMap';\nimport EditModel from '../models/EditModel';\nimport { ErrorIcon } from '../DefaultIcons/ErrorIcon';\nimport { SuccessIcon } from '../DefaultIcons/SuccessIcon';\n\nexport const UsersTable = ({\n    specialRoles = new SpecialRolesMap(), \n    users = new UsersMap(), \n    tags = new TagsMap(),\n    editModels = new EditModelMap(),\n    onEditUser\n}) => {\n    let rows = users.mapToArray((address, user) => {\n        let specialRolesView = User.getSpecialRoles(user).map(role => {\n            let icon = (<Icon name='close' fitted/>);\n            return (\n                <TagButton tag={specialRoles.get(role)} icon={icon} childClick={() => console.log(\"click\")} />\n            );\n        });\n\n        if(User.isOwner(user)) {\n            specialRolesView.unshift(<TagView tag={new Tag(undefined, \"owner\")} basic/>);\n        }\n\n        let roles = User.getRoles(user).map(role => {\n            let icon = (<Icon name='close' fitted/>);\n            return (\n                <TagButton tag={tags.get(role)} icon={icon} childClick={() => console.log(\"click\")} />\n            );\n        })\n\n        let editModel = editModels.get(address);\n        let editIcon = (<Icon name=\"tag\"/>);\n        \n        if(EditModel.isError(editModel)) {\n            editIcon = (<ErrorIcon/>)\n        }\n\n        if(EditModel.isSuccess(editModel)) {\n            editIcon = (<SuccessIcon/>);\n        }\n\n        return (\n            <Table.Row>\n                <TableCell>{address}</TableCell>\n                <TableCell>\n                    {specialRolesView}\n                </TableCell>\n                <TableCell>\n                    {roles}\n                </TableCell>\n                <TableCell>\n                    <Button icon={editIcon} onClick={() => onEditUser(address)} loading={EditModel.isLoading(editModel)}/>\n                </TableCell>\n            </Table.Row>\n        );\n    });\n\n    return (\n        <Table selectable>\n            <Table.Header>\n                <Table.Row>\n                    <Table.HeaderCell>Address</Table.HeaderCell>\n                    <Table.HeaderCell>Special Rights</Table.HeaderCell>\n                    <Table.HeaderCell>Link Rights</Table.HeaderCell>\n                    <Table.HeaderCell>Actions</Table.HeaderCell>\n                </Table.Row>\n            </Table.Header>\n\n            <Table.Body>\n                {rows}\n            </Table.Body>\n        </Table>\n    );\n}\n\n//container part\nexport const mapStateToProps = (state) => {\n    return {\n        specialRoles: SpecialRoleSelector.getContractSelected(state),\n        users: UserSelector.getContractSelected(state),\n        tags: TagSelector.getContractSelected(state),\n        address: SelectSelector.getSelectedContract(state),\n        editModels: EditModelSelector.getContractSelected(state)\n    };\n}\n\nexport const mapDispatchToProps = (dispatch) => {\n    return {\n        onEditUser: (address, id) => dispatch(editModelActions.onEditUserModalOpen(true, address, id))\n    };\n}\n\nexport const mergeProps = (stateProps, dispatchProps, ownProps) => {\n    return Object.assign(stateProps, dispatchProps, ownProps, {\n        onEditUser: (id) => dispatchProps.onEditUser(stateProps.address, id)\n    });\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(UsersTable);","import * as modelActions from \"../modelActions\";\nimport * as actions from \"./actions\";\nimport { combineEpics, ofType } from \"redux-observable\";\nimport {withWeb3ContractFrom, withContentFromIDArray} from \"../operators\";\nimport { map, flatMap, switchAll } from \"rxjs/operators\";\nimport { from } from 'rxjs';\nimport { UserSelector, SpecialRoleSelector } from \"../models\";\nimport SpecialRolesMap from \"./SpecialRolesMap\";\nimport UsersMap from \"../models/maps/UsersMap\";\n\nexport const contractSpecialRolesLoadEpic = (action$, state$) => action$.pipe(\n    ofType(modelActions.types.contractLoad),\n    withWeb3ContractFrom(state$),\n    withContentFromIDArray(\"getSpecialRoles\", \"getSpecialRole\"),\n    map(({result}) => modelActions.onUserSpecialRoleLoaded(\n        \"\", \n        result[0], \n        result[1]\n    ))\n    // flatMap(({action, web3Instance}) => {\n    //     return from(\n    //         web3Instance.methods.getSpecialRoles().call()\n    //     ).pipe(\n    //         switchAll(),\n    //         flatMap(role => {\n    //             return from(\n    //                 web3Instance.methods.getSpecialRole(role).call()\n    //             )\n    //         }),\n    //         map(role => modelActions.onUserSpecialRoleLoaded(action.address, role[0], role[1]))\n    //     )\n    // }),\n);\n\nexport const usersEpic = (action$, state$) => action$.pipe(\n    ofType(modelActions.types.contractLoad),\n    withWeb3ContractFrom(state$),\n    withContentFromIDArray(\"getUsers\", \"getUser\"),\n    map(({result}) => actions.onUserLoaded(\n        result[0], \n        result[1].filter(tag => tag != 0), \n        result[2].filter(tag => tag != 0), \n        result[3]\n    ))\n    // flatMap(({action, web3Instance}) => {\n    //     return from(\n    //         web3Instance.methods.getUsers().call()\n    //     ).pipe(\n    //         switchAll(),\n    //         flatMap(user => {\n    //             return from(\n    //                 web3Instance.methods.getUser(user).call()\n    //             )\n    //         }),\n    //         map(user => actions.onUserLoaded(user[0], user[1].filter(tag => tag != 0), user[2].filter(tag => tag != 0), user[3]))\n    //     )\n    // })\n);\n\nconst epic = combineEpics(contractSpecialRolesLoadEpic, usersEpic);\n\nexport const specialRolesReducer = (\n    state = new SpecialRolesMap(SpecialRoleSelector.key),\n    action\n) => {\n    switch(action.type) {\n        case modelActions.types.contractLoad:\n            return SpecialRolesMap.reset(state);\n        case modelActions.types.userSpecialRoleLoaded:\n            return SpecialRolesMap.add(state, action.role);\n        default:\n            return state;\n    }\n};\n\nexport const usersReducer = (\n    state = new UsersMap(UserSelector.key), \n    action\n) => {\n    switch(action.type) {\n        case modelActions.types.contractLoad:\n            return UsersMap.reset(state);\n        case actions.types.userLoaded:\n            return UsersMap.add(state, action.user);\n        default:\n            return state;\n    }\n}\n\nexport default {specialRolesReducer, usersReducer, epic};","import React, {Fragment} from 'react';\nimport { connect } from 'react-redux';\n\nimport { Menu, Segment } from 'semantic-ui-react';\nimport LinksView from '../LinksView';\nimport {ProvenanceView} from \"../ProvenanceView\";\nimport {UsersView} from \"../UsersView\";\n\nexport class ContentView extends React.Component {\n    state = { \n        items: {\n            links: \"links\",\n            provenance: \"provenance\",\n            users: \"users\"\n        },\n        activeItem: 'links' }\n\n    handleItemClick = (e, { name }) => this.setState({ activeItem: name })\n\n    render() {\n\n        let activeComponent;\n\n        switch(this.state.activeItem) {\n            case this.state.items.links:\n                activeComponent = (<LinksView.Component />);\n                break;\n            case this.state.items.provenance:\n                activeComponent = (<ProvenanceView/>);\n                break;\n            case this.state.items.users:\n                activeComponent = (<UsersView/>);\n                break;\n            default:\n                break;\n        }\n\n        return (\n            <Fragment>\n                <Menu attached='top' tabular>\n                    {\n                        Object.keys(this.state.items).map(\n                            name => <Menu.Item name={name} active={this.state.activeItem === name} onClick={this.handleItemClick}/>\n                        )\n                    }\n                </Menu>\n                <Segment attached='bottom'>\n                    {activeComponent}\n                </Segment>\n            </Fragment>\n        );\n    }\n}","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { Grid, Header, Label, Icon, Dimmer, Loader, Segment, Button } from 'semantic-ui-react';\n\nimport { ContractDetails, ProvContract, ProvContractSelector } from '../models';\n\nexport const ContractHeader = ({address, title}) => {    \n    return (\n        <Header as=\"h1\" dividing>\n            ProvContract: {title}\n            <Header.Subheader>\n                Contract Address: {address}\n            </Header.Subheader>\n        </Header>\n    );\n}\n\n//container part\nexport const mapStateToProps = (state) => {\n    let selected = ProvContractSelector.getSelected(state);\n\n    return {\n        address: ProvContract.getAddress(selected),\n        title: ContractDetails.getTitle(ProvContract.getDetails(selected))\n    };\n}\n\nexport default connect(mapStateToProps)(ContractHeader);","import ContractView from \"./ContractView\";\n\nexport default ContractView;","import React from 'react';\n\nimport { Grid} from 'semantic-ui-react';\n\nimport ContractDetailsView from \"./ContractDetailsView\";\nimport { TagsListView } from \"../TagsListView\";\nimport { ContentView } from './ContentView';\nimport { default as ContractHeader } from './ContractHeader';\n\nexport const ContractView = () => {    \n    return (\n        <Grid padded>\n            <Grid.Row>\n                <Grid.Column>\n                    <ContractHeader/>\n                </Grid.Column>\n            </Grid.Row>\n            <Grid.Row columns={2}>\n                <Grid.Column stretched>\n                    <ContractDetailsView/>\n                </Grid.Column>\n                <Grid.Column floated=\"right\" width={5}>\n                    <TagsListView />\n                </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n                <Grid.Column>\n                    <ContentView/>\n                </Grid.Column>\n            </Grid.Row>\n        </Grid>\n    );\n}\n\nexport default ContractView;","import React, { Component } from 'react';\nimport TopMenu from './TopMenu';\nimport Loader from \"./Web3Loader\";\nimport LinksView from \"./LinksView\";\nimport {\n\tDeployContract, \n\tEditDetailsView, \n\tEditTagView, \n\tEditUserView,\n\tEditLinkView,\n\tProvRecordsView\n} from \"./EditViews\";\nimport { connect } from 'react-redux';\nimport ContractView from \"./ContractView\"\nimport EditModelSelector from './models/selectors/EditModelSelector';\nimport EditModel from './models/EditModel';\nimport ContractEditModelMap from './models/maps/ContractEditModelMap';\nimport { SelectSelector } from './models';\nimport * as modelActions from \"./modelActions\";\n\nclass App extends Component {\n\n\tcomponentDidUpdate() {\n\t\tif(this.props.match.params.contract !== this.props.selected) {\n\t\t\t//this updates the state based on the browser history buttons\n\t\t\t//for initial state is the Web3Loader responsible\n\t\t\tthis.props.selectHistoryContract(this.props.match.params.contract);\n\t\t}\n\t}\n\n    render() {\n\t\tlet renderModal;\n\t\tswitch(EditModel.getModal(this.props.model)) {\n\t\t\tcase ContractEditModelMap.modals.deploy:\n\t\t\t\trenderModal = (<DeployContract/>);\n\t\t\t\tbreak;\n\t\t\tcase ContractEditModelMap.modals.details:\n\t\t\t\trenderModal = (<EditDetailsView/>);\n\t\t\t\tbreak;\n\t\t\tcase ContractEditModelMap.modals.editLink:\n\t\t\t\trenderModal = (<EditLinkView/>);\n\t\t\t\tbreak;\n\t\t\tcase ContractEditModelMap.modals.editTag:\n\t\t\t\trenderModal = (<EditTagView/>);\n\t\t\t\tbreak;\n\t\t\tcase ContractEditModelMap.modals.editUser:\n\t\t\t\trenderModal = (<EditUserView/>);\n\t\t\t\tbreak;\n\t\t\tcase ContractEditModelMap.modals.displayProv:\n\t\t\t\trenderModal = (<ProvRecordsView/>)\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Loader.Component match={this.props.match} location={this.props.location}/>\n\t\t\t\t<TopMenu.Component/>\n\t\t\t\t<ContractView/>\n\t\t\t\t{checkAndRender(\n\t\t\t\t\tEditModel.isOpen(this.props.model), \n\t\t\t\t\trenderModal\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport const checkAndRender = (isOpen, component) => {\n\tif(isOpen) {\n\t\treturn component;\n\t}\n}\n\nexport const mapStateToProps = (state) => {\n\tconsole.log(state);\n\treturn {\n\t\tmodel: EditModelSelector.getSelectedModel(state),\n\t\tselected: SelectSelector.getSelectedContract(state)\n\t};\n}\n\nexport const mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tselectHistoryContract: (address) => dispatch(modelActions.onContractSelectHistory(address))\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as modelActions from \"./modelActions\";\nimport { TagSelector, ContractTagsMap } from \"./models\";\n\nexport const tagReducer = (\n    state = new ContractTagsMap(TagSelector.key),\n    action\n) => {\n    switch(action.type) {\n        case modelActions.types.typeLoaded:\n            return ContractTagsMap.add(state, action.address, action.tag);\n        default:\n            return state;\n    }\n};","import * as modelActions from \"./modelActions\";\nimport { ContractLinksMap, LinkSelector } from \"./models\";\n\nexport const linkReducer = (\n    state = new ContractLinksMap(LinkSelector.key),\n    // state = new ContractListMap(\"links\",\n    //     (item) => Link.getAddress(item),\n    //     (id) => new Link(id)\n    // ),\n    action\n) => {\n    switch(action.type) {\n        case modelActions.types.linkLoaded:\n            return ContractLinksMap.add(state, action.address, action.link);\n        //return ContractListMap.add(state, action.address, action.link);\n        default:\n            return state;\n    }\n};","import * as modelActions from \"./modelActions\";\nimport { combineReducers } from 'redux';\nimport { combineEpics, ofType } from 'redux-observable';\nimport { connectRouter } from 'connected-react-router';\nimport Web3Loader from './Web3Loader';\nimport { \n    withLatestFrom, \n    map,  \n    flatMap, \n    switchAll,\n    reduce,\n    catchError } from \"rxjs/operators\";\nimport { of, from, zip, forkJoin, Observable} from 'rxjs';\n\nimport SimpleProvenanceContract from \"ProvNet/build/linked/SimpleProvenanceContract\";\n\nimport { ProvContract, TagSelector, SelectSelector, SpecialRoleSelector, UserSelector, ProvContractMap, ProvContractSelector, UriSelector, ProvRecordsSelector } from \"./models\";\nimport Select from \"./SelectReducer\";\nimport {DeployContract} from \"./EditViews\";\nimport {EditDetailsView, editTagReducer, editTagEpic} from \"./EditViews\";\nimport {reducer as specialRolesReducer} from \"./UsersView\";\nimport {withWeb3ContractFrom} from \"./operators\";\nimport {tagReducer} from \"./tagReducer\";\nimport { linkReducer } from \"./linksReducer\";\nimport { EditModelReducer, editModelEpics } from \"./EditViews\";\nimport EditModelSelector from \"./models/selectors/EditModelSelector\";\nimport {epic as userEpic} from \"./EditViews/EditUserView\";\nimport {reducer as uriReducer, epic as uriEpic, provRecordReducer} from \"./ProvenanceView\";\n\nexport const contractDetailsLoadingEpic = (action$, state$) => action$.pipe(\n    ofType(modelActions.types.contractLoad),\n    withWeb3ContractFrom(state$),\n    flatMap(({action, web3Instance}) => {\n        return forkJoin(\n            web3Instance.methods.getDescription().call(),\n            web3Instance.methods.getLogoUrl().call(),\n            web3Instance.methods.getTitle().call(),\n        ).pipe(\n            map(([description, logoUrl, title]) => modelActions.onContractDetailsLoaded(action.address, title, description, logoUrl))\n        );\n    }),\n);\n\nexport const contractTypesLoadEpic = (action$, state$) => action$.pipe(\n    ofType(modelActions.types.contractLoad),\n    withWeb3ContractFrom(state$),\n    flatMap(({action, web3Instance}) => {\n        return from(\n            web3Instance.methods.getLinkTypes().call()\n        ).pipe(\n            switchAll(),\n            map(type => modelActions.onTypeLoad(action.address, type)),\n            reduce((actions, action) => {\n                actions.push(action);\n                return actions;\n            }, []),\n            map(actions => {\n                actions.push(modelActions.onLinksLoad(action.address));\n                return actions;\n            }),\n            switchAll()\n        );\n    }),\n);\n\nexport const typeLoadEpic = (action$, state$) => action$.pipe(\n    ofType(modelActions.types.typeLoad),\n    withLatestFrom(state$),\n    flatMap(([action, state]) => {\n        let web3Instance = new state.web3.eth.Contract(SimpleProvenanceContract.truffle.abi, action.address);\n        return from(\n            web3Instance.methods.getLinkType(action.tag.id).call()\n        ).pipe(\n            map(typeName => {\n                return modelActions.onTypeLoaded(action.address, action.tag.id, typeName);\n            })\n        );\n    }),\n);\n\nexport const contractLinksLoadEpic = (action$, state$) => action$.pipe(\n    ofType(modelActions.types.linksLoad),\n    withLatestFrom(state$),\n    map(([action, state]) => ({action: action, web3Instance: new state.web3.eth.Contract(SimpleProvenanceContract.truffle.abi, action.address)})\n    ),\n    flatMap(({action, web3Instance}) => from(\n            web3Instance.methods.getLinkList().call()\n        ).pipe(\n            switchAll(),\n            withLatestFrom(state$),\n            flatMap(([linkAddress, state]) => zip(\n                web3Instance.methods.getLink(linkAddress).call(),\n                (new state.web3.eth.Contract(SimpleProvenanceContract.truffle.abi, linkAddress)).methods.getTitle().call(),\n                (res, title) => modelActions.onLinkLoaded(action.address, res[0], res[1].filter(tag => tag != 0), title)\n            ))\n        )\n    ),\n);\n\nexport const linkSelectEpic = (action$, state$) => action$.pipe(\n    ofType(modelActions.types.linkSelect),\n    withLatestFrom(state$),\n    flatMap(([action, state]) => {\n        if(ProvContractSelector.isLoaded(state, action.address)){\n            return of(modelActions.onLinkSelected(action.address));\n        }\n\n        return of(\n            modelActions.onContractLoad(action.address),\n            modelActions.onLinkSelected(action.address)\n        );\n    })\n);\n\nexport const contractReducer = (state = new ProvContractMap(ProvContractSelector.key), action) => {\n    console.log(action.type);\n\n    switch(action.type) {\n        case modelActions.types.contractLoad:\n            return ProvContractMap.add(state, new ProvContract(action.address));\n        case modelActions.types.contractDetailsLoaded:\n            return ProvContractMap.add(state, new ProvContract(action.address, action.details));\n        \n        default:\n            return state;\n    }\n}\n\nexport const rootEpic = combineEpics(\n    Web3Loader.epic,\n    contractTypesLoadEpic,\n    contractLinksLoadEpic,\n    typeLoadEpic,\n    contractDetailsLoadingEpic,\n    linkSelectEpic,\n    Select.epic,\n    editModelEpics,\n    specialRolesReducer.epic,\n    userEpic,\n    uriEpic\n);\n\nexport const rootReducer = (history) => combineReducers({\n    router: connectRouter(history),\n    [ProvContractSelector.key]: contractReducer,\n    web3Loader: Web3Loader.reducer,\n    web3: Web3Loader.web3,\n    [SelectSelector.getKey()]: Select.reducer,\n    [EditModelSelector.key]: EditModelReducer,\n    [SpecialRoleSelector.key]: specialRolesReducer.specialRolesReducer,\n    [UserSelector.key]: specialRolesReducer.usersReducer,\n    [TagSelector.key]: tagReducer,\n    links: linkReducer,\n    [UriSelector.key]: uriReducer,\n    [ProvRecordsSelector.key]: provRecordReducer,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport {rootReducer, rootEpic} from \"./rootReducer\";\nimport { createEpicMiddleware } from 'redux-observable';\nimport { Route, Switch } from 'react-router-dom'\nimport { routerMiddleware } from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\nimport { ConnectedRouter } from 'connected-react-router'\n\nconst epicMiddleware = createEpicMiddleware();\n\nconst history = createBrowserHistory();\n\nconst store = createStore(\n    rootReducer(history), \n    applyMiddleware(\n        routerMiddleware(history),\n        epicMiddleware\n    )\n);\n\nepicMiddleware.run(rootEpic);\n\nReactDOM.render(\n    <Provider store={store}>\n        <ConnectedRouter history={history}>\n            <Switch>\n                <Route path=\"/ProvNet/contracts/:contract\" component={App}/>\n                <Route path=\"/ProvNet/\" component={App}/>\n            </Switch>\n        </ConnectedRouter>\n        {/* <App /> */}\n    </Provider>, \n    document.getElementById('root')\n);\nregisterServiceWorker();\n\n// export const types = {\n//     initWeb3: \"INIT_WEB3\",\n//     initWeb3Success: \"INIT_WEB3_SUCCESS\",\n//     initWeb3Failed: \"INIT_WEB3_FAILED\",\n// }\n\n// export const startInit = (web3) => ({\n//     type: types.initWeb3,\n//     web3: web3,\n// })\n\n// console.log(window.web3);\n// let start = new Web3(window.web3.currentProvider);\n// store.dispatch({\n//     type: types.initWeb3,\n//     web3: start,\n// });"],"sourceRoot":""}